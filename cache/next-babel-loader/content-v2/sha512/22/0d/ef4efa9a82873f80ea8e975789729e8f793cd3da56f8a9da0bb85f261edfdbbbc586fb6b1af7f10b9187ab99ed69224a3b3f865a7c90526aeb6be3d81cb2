{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { PageHeader, Divider, Card, Avatar } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport Comment from '../utils/Comment/Comment';\nmoment.locale('ko');\n\nfunction PostPage() {\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      currentUser = _useSelector.currentUser;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.blog;\n  }),\n      currentBlogPost = _useSelector2.currentBlogPost,\n      loadBlogPostLoading = _useSelector2.loadBlogPostLoading,\n      loadBlogPostDone = _useSelector2.loadBlogPostDone;\n\n  var handleCancel = useCallback(function () {\n    router.back();\n  }, []);\n  var loadingWrapperStyle = useMemo(function () {\n    return {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      width: '100vw',\n      height: 'calc(100vh - 128px)'\n    };\n  }, []);\n  var loadingStyle = useMemo(function () {\n    return {\n      fontSize: '5rem'\n    };\n  }, []);\n  var rootWrapperStyle = useMemo(function () {\n    return {\n      width: '80%',\n      maxWidth: '1000px',\n      padding: 24,\n      margin: '3rem auto'\n    };\n  }, []);\n  var cardStyle = useMemo(function () {\n    return {\n      border: 'none'\n    };\n  }, []);\n  var blogContentStyle = useMemo(function () {\n    return {\n      margin: '3rem auto',\n      height: '100%'\n    };\n  }, []);\n  var renderBlogPost = useMemo(function () {\n    return {\n      __html: currentBlogPost.content\n    };\n  }, [currentBlogPost]);\n  var commentPayload = useMemo(function () {\n    return {\n      blogId: currentBlogPost._id\n    };\n  }, [currentBlogPost]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [loadBlogPostLoading && /*#__PURE__*/_jsx(\"div\", {\n      style: loadingWrapperStyle,\n      children: /*#__PURE__*/_jsx(LoadingOutlined, {\n        style: loadingStyle\n      })\n    }), loadBlogPostDone && /*#__PURE__*/_jsx(_Fragment, {\n      children: /*#__PURE__*/_jsxs(\"div\", {\n        style: rootWrapperStyle,\n        children: [/*#__PURE__*/_jsx(PageHeader, {\n          ghost: false,\n          onBack: handleCancel,\n          title: currentBlogPost.title,\n          children: /*#__PURE__*/_jsx(Card, {\n            style: cardStyle,\n            children: /*#__PURE__*/_jsx(Card.Meta, {\n              avatar: /*#__PURE__*/_jsx(Avatar, {\n                size: \"large\",\n                src: currentBlogPost.writer.image,\n                alt: currentBlogPost.writer.name\n              }),\n              title: currentBlogPost.writer.email,\n              description: \"\".concat(currentBlogPost.writer.name, \" / \").concat(moment(currentBlogPost.createdAt).format('a h:mm:ss, YYYY년 MMMM Do'))\n            })\n          })\n        }), /*#__PURE__*/_jsx(Divider, {}), /*#__PURE__*/_jsx(\"div\", {\n          style: blogContentStyle,\n          children: /*#__PURE__*/_jsx(\"div\", {\n            dangerouslySetInnerHTML: renderBlogPost\n          })\n        }), /*#__PURE__*/_jsx(Comment, {\n          disabled: !currentUser.isAuth,\n          payload: commentPayload,\n          description: \"\\uB367\\uAE00 \\uB0A8\\uAE30\\uAE30\",\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uB0A8\\uACA8\\uC8FC\\uC138\\uC694. \\uBE14\\uB85C\\uAC70\\uC5D0\\uAC8C\\uB294 \\uD070 \\uD798\\uC774 \\uB429\\uB2C8\\uB2E4.\"\n        })]\n      })\n    })]\n  });\n}\n\nexport default PostPage;","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/components/Blog/PostPage.js"],"names":["React","useCallback","useMemo","useSelector","useRouter","PageHeader","Divider","Card","Avatar","LoadingOutlined","moment","Comment","locale","PostPage","router","state","user","currentUser","blog","currentBlogPost","loadBlogPostLoading","loadBlogPostDone","handleCancel","back","loadingWrapperStyle","display","justifyContent","alignItems","width","height","loadingStyle","fontSize","rootWrapperStyle","maxWidth","padding","margin","cardStyle","border","blogContentStyle","renderBlogPost","__html","content","commentPayload","blogId","_id","title","writer","image","name","email","createdAt","format","isAuth"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router'\nimport { PageHeader, Divider, Card, Avatar } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport moment from 'moment'\nimport Comment from '../utils/Comment/Comment'\nmoment.locale('ko')\n\nfunction PostPage() {\n\n  const router = useRouter();\n\n  const { currentUser } = useSelector(state => state.user);\n  const { currentBlogPost, loadBlogPostLoading, loadBlogPostDone } = useSelector(state => state.blog)\n\n  const handleCancel = useCallback(() => {\n    router.back()\n  }, [])\n\n  const loadingWrapperStyle = useMemo(() => ({ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100vw', height: 'calc(100vh - 128px)' }), [])\n  const loadingStyle = useMemo(() => ({ fontSize: '5rem' }), [])\n  const rootWrapperStyle = useMemo(() => ({ width: '80%', maxWidth: '1000px', padding: 24, margin: '3rem auto' }), [])\n  const cardStyle = useMemo(() => ({ border: 'none' }), [])\n  const blogContentStyle = useMemo(() => ({ margin: '3rem auto', height: '100%' }), [])\n  const renderBlogPost = useMemo(() => ({ __html: currentBlogPost.content }), [currentBlogPost])\n  const commentPayload = useMemo(() => ({ blogId: currentBlogPost._id }), [currentBlogPost])\n\n  return (\n    <>\n      {loadBlogPostLoading && <div style={loadingWrapperStyle}>\n        <LoadingOutlined style={loadingStyle} />\n      </div>}\n      {loadBlogPostDone && <>\n        <div style={rootWrapperStyle}>\n          <PageHeader\n            ghost={false}\n            onBack={handleCancel}\n            title={currentBlogPost.title}\n          >\n            <Card style={cardStyle}>\n              <Card.Meta\n                avatar={<Avatar size='large' src={currentBlogPost.writer.image} alt={currentBlogPost.writer.name} />}\n                title={currentBlogPost.writer.email}\n                description={`${currentBlogPost.writer.name} / ${moment(currentBlogPost.createdAt).format('a h:mm:ss, YYYY년 MMMM Do')}`}\n              />\n            </Card>\n          </PageHeader>\n\n          <Divider />\n          <div style={blogContentStyle}>\n            <div dangerouslySetInnerHTML={renderBlogPost} />\n          </div>\n          <Comment disabled={!currentUser.isAuth} payload={commentPayload} description='덧글 남기기' placeholder='댓글을 남겨주세요. 블로거에게는 큰 힘이 됩니다.' />\n        </div>\n      </>}\n    </>\n  )\n}\n\nexport default PostPage\n"]},"metadata":{},"sourceType":"module"}