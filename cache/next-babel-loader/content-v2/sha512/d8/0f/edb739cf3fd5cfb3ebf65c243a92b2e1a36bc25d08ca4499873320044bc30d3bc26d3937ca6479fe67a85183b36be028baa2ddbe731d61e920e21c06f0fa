{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/justinjeong/Github/javascript/githubIo/client/components/Chatting/SidePanel/DirectMessage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Badge, Typography } from 'antd';\nimport { CoffeeOutlined, RedoOutlined } from '@ant-design/icons';\nimport { LOAD_CHAT_USERS_REQUEST, SET_CURRENT_DIRECT_ROOM } from '../../../reducers/types';\nconst {\n  Title\n} = Typography;\n\nfunction DirectMessage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    currentUser\n  } = useSelector(state => state.user);\n  const {\n    chatUsers,\n    currentChatRoom,\n    loadChatUsersDone\n  } = useSelector(state => state.chat);\n  const handleCurrentRoom = useCallback(directRoom => () => {\n    dispatch({\n      type: SET_CURRENT_DIRECT_ROOM,\n      payload: directRoom\n    });\n  }, []);\n  const renderSelected = useCallback(directRoom => {\n    if (directRoom === currentChatRoom._id) {\n      return 'gray';\n    }\n\n    return '';\n  }, [currentChatRoom]);\n  const renderRirectMessages = useCallback(() => chatUsers === null || chatUsers === void 0 ? void 0 : chatUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: handleCurrentRoom(user.directRoom),\n    style: {\n      backgroundColor: renderSelected(user.directRoom),\n      margin: '0.2rem',\n      padding: '0.2rem',\n      borderRadius: '0.3rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [`# ${user.name}`, /*#__PURE__*/_jsxDEV(Badge, {\n        dot: user.token,\n        color: user.token ? '#22d100' : 'grey'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, uuidv4(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)), [chatUsers]);\n  const handleRerender = useCallback(() => {\n    if (currentUser.isAuth) {\n      dispatch({\n        type: LOAD_CHAT_USERS_REQUEST\n      });\n    }\n  }, [currentUser]);\n  const renderEmptyMessages = useMemo(() => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      color: 'gray'\n    },\n    children: \"\\uB85C\\uADF8\\uC778\\uD574\\uC8FC\\uC138\\uC694.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 46\n  }, this), []);\n  const titleStyle = useMemo(() => ({\n    color: 'white'\n  }), []);\n  const headerStyle = useMemo(() => ({\n    display: 'flex',\n    justifyContent: 'space-between'\n  }), []);\n  const redoIconStyle = useMemo(() => ({\n    marginTop: 5,\n    marginRight: 7\n  }), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      level: 5,\n      style: titleStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: headerStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(CoffeeOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), chatUsers ? ` DirectMessage [${chatUsers === null || chatUsers === void 0 ? void 0 : chatUsers.length}] ` : ` DirectMessage [0] `]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RedoOutlined, {\n          style: redoIconStyle,\n          onClick: handleRerender\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), loadChatUsersDone && (chatUsers ? renderRirectMessages : renderEmptyMessages)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DirectMessage, \"q86sgYsigNw9wGCg9dNJcMYVYJM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = DirectMessage;\nexport default DirectMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"DirectMessage\");","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/components/Chatting/SidePanel/DirectMessage.js"],"names":["React","useCallback","useMemo","useDispatch","useSelector","v4","uuidv4","Badge","Typography","CoffeeOutlined","RedoOutlined","LOAD_CHAT_USERS_REQUEST","SET_CURRENT_DIRECT_ROOM","Title","DirectMessage","dispatch","currentUser","state","user","chatUsers","currentChatRoom","loadChatUsersDone","chat","handleCurrentRoom","directRoom","type","payload","renderSelected","_id","renderRirectMessages","map","backgroundColor","margin","padding","borderRadius","display","justifyContent","name","token","handleRerender","isAuth","renderEmptyMessages","color","titleStyle","headerStyle","redoIconStyle","marginTop","marginRight","length"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { v4 as uuidv4 } from 'uuid'\nimport { Badge, Typography } from 'antd'\nimport { CoffeeOutlined, RedoOutlined } from '@ant-design/icons'\nimport { LOAD_CHAT_USERS_REQUEST, SET_CURRENT_DIRECT_ROOM } from '../../../reducers/types'\nconst { Title } = Typography;\n\nfunction DirectMessage() {\n\n  const dispatch = useDispatch();\n  const { currentUser } = useSelector(state => state.user)\n  const { chatUsers, currentChatRoom, loadChatUsersDone } = useSelector(state => state.chat)\n\n  const handleCurrentRoom = useCallback((directRoom) => () => {\n    dispatch({\n      type: SET_CURRENT_DIRECT_ROOM,\n      payload: directRoom,\n    })\n  }, [])\n\n  const renderSelected = useCallback((directRoom) => {\n    if (directRoom === currentChatRoom._id) {\n      return 'gray'\n    }\n    return ''\n  }, [currentChatRoom])\n\n  const renderRirectMessages = useCallback(() => chatUsers?.map(user => (\n    <div key={uuidv4()} onClick={handleCurrentRoom(user.directRoom)}\n      style={{\n        backgroundColor: renderSelected(user.directRoom),\n        margin: '0.2rem',\n        padding: '0.2rem',\n        borderRadius: '0.3rem'\n      }}\n    >\n      <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n        {`# ${user.name}`}\n        <Badge dot={user.token} color={user.token ? '#22d100' : 'grey'} />\n      </div>\n    </div>\n  )), [chatUsers])\n\n  const handleRerender = useCallback(() => {\n    if (currentUser.isAuth) {\n      dispatch({\n        type: LOAD_CHAT_USERS_REQUEST\n      })\n    }\n  }, [currentUser])\n\n  const renderEmptyMessages = useMemo(() => (<div style={{ color: 'gray' }}>\n    로그인해주세요.\n  </div>), [])\n  const titleStyle = useMemo(() => ({ color: 'white' }), [])\n  const headerStyle = useMemo(() => ({ display: 'flex', justifyContent: 'space-between' }), [])\n  const redoIconStyle = useMemo(() => ({ marginTop: 5, marginRight: 7 }), [])\n\n  return (\n    <div>\n      <Title level={5} style={titleStyle}>\n        <div style={headerStyle}>\n          <span>\n            <CoffeeOutlined />{chatUsers ? ` DirectMessage [${chatUsers?.length}] ` : ` DirectMessage [0] `}\n          </span>\n          <RedoOutlined style={redoIconStyle}\n            onClick={handleRerender} />\n        </div>\n\n      </Title>\n      {loadChatUsersDone && (chatUsers ? renderRirectMessages : renderEmptyMessages)}\n    </div>\n  )\n}\n\nexport default DirectMessage\n"]},"metadata":{},"sourceType":"module"}