{"ast":null,"code":"import io from 'socket.io-client';\nimport { SERVER_URL } from '../../config/key';\nlet socket;\nexport const initiateSocket = () => {\n  socket = io(SERVER_URL, {\n    withCredentials: true\n  });\n};\nexport const disconnectSocket = () => {\n  if (socket) socket.disconnect();\n};\nexport const subscribeChat = callback => {\n  if (socket) socket.on('returnMessage', payload => {\n    if (payload.error) return callback(payload);\n    return callback(null, payload);\n  });\n};\nexport const sendChat = payload => {\n  if (socket) socket.emit('submitMessage', payload);\n};\nexport const detectError = () => {\n  if (socket) socket.on('SocketError', payload => {\n    console.error(payload);\n  });\n};\nexport const createChatRoom = payload => {\n  if (socket) socket.emit('createChatRoom', payload);\n};\nexport const subscribeChatRoom = callback => {\n  if (socket) socket.on('returnChatRoom', payload => {\n    if (payload.error) return callback(payload);\n    return callback(null, payload);\n  });\n};","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/components/utils/socket.js"],"names":["io","SERVER_URL","socket","initiateSocket","withCredentials","disconnectSocket","disconnect","subscribeChat","callback","on","payload","error","sendChat","emit","detectError","console","createChatRoom","subscribeChatRoom"],"mappings":"AAAA,OAAOA,EAAP,MAAe,kBAAf;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,IAAIC,MAAJ;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClCD,EAAAA,MAAM,GAAGF,EAAE,CAACC,UAAD,EAAa;AAAEG,IAAAA,eAAe,EAAE;AAAnB,GAAb,CAAX;AACD,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AACpC,MAAIH,MAAJ,EAAYA,MAAM,CAACI,UAAP;AACb,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAIC,QAAD,IAAc;AACzC,MAAIN,MAAJ,EAAYA,MAAM,CAACO,EAAP,CAAU,eAAV,EAA2BC,OAAO,IAAI;AAChD,QAAIA,OAAO,CAACC,KAAZ,EAAmB,OAAOH,QAAQ,CAACE,OAAD,CAAf;AACnB,WAAOF,QAAQ,CAAC,IAAD,EAAOE,OAAP,CAAf;AACD,GAHW;AAIb,CALM;AAOP,OAAO,MAAME,QAAQ,GAAIF,OAAD,IAAa;AACnC,MAAIR,MAAJ,EAAYA,MAAM,CAACW,IAAP,CAAY,eAAZ,EAA6BH,OAA7B;AACb,CAFM;AAIP,OAAO,MAAMI,WAAW,GAAG,MAAM;AAC/B,MAAIZ,MAAJ,EAAYA,MAAM,CAACO,EAAP,CAAU,aAAV,EAAyBC,OAAO,IAAI;AAC9CK,IAAAA,OAAO,CAACJ,KAAR,CAAcD,OAAd;AACD,GAFW;AAGb,CAJM;AAMP,OAAO,MAAMM,cAAc,GAAIN,OAAD,IAAa;AACzC,MAAIR,MAAJ,EAAYA,MAAM,CAACW,IAAP,CAAY,gBAAZ,EAA8BH,OAA9B;AACb,CAFM;AAIP,OAAO,MAAMO,iBAAiB,GAAIT,QAAD,IAAc;AAC7C,MAAIN,MAAJ,EAAYA,MAAM,CAACO,EAAP,CAAU,gBAAV,EAA4BC,OAAO,IAAI;AACjD,QAAIA,OAAO,CAACC,KAAZ,EAAmB,OAAOH,QAAQ,CAACE,OAAD,CAAf;AACnB,WAAOF,QAAQ,CAAC,IAAD,EAAOE,OAAP,CAAf;AACD,GAHW;AAIb,CALM","sourcesContent":["import io from 'socket.io-client';\nimport { SERVER_URL } from '../../config/key'\n\nlet socket;\n\nexport const initiateSocket = () => {\n  socket = io(SERVER_URL, { withCredentials: true });\n}\n\nexport const disconnectSocket = () => {\n  if (socket) socket.disconnect();\n}\n\nexport const subscribeChat = (callback) => {\n  if (socket) socket.on('returnMessage', payload => {\n    if (payload.error) return callback(payload);\n    return callback(null, payload);\n  });\n}\n\nexport const sendChat = (payload) => {\n  if (socket) socket.emit('submitMessage', payload);\n}\n\nexport const detectError = () => {\n  if (socket) socket.on('SocketError', payload => {\n    console.error(payload);\n  });\n}\n\nexport const createChatRoom = (payload) => {\n  if (socket) socket.emit('createChatRoom', payload)\n}\n\nexport const subscribeChatRoom = (callback) => {\n  if (socket) socket.on('returnChatRoom', payload => {\n    if (payload.error) return callback(payload);\n    return callback(null, payload);\n  });\n}\n"]},"metadata":{},"sourceType":"module"}