{"ast":null,"code":"import { all, fork, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE, UPLOAD_PRODUCT_REQUEST, UPLOAD_PRODUCT_SUCCESS, UPLOAD_PRODUCT_FAILURE, UPLOAD_IMAGE_REQUEST, UPLOAD_IMAGE_SUCCESS, UPLOAD_IMAGE_FAILURE, LOAD_PRODUCT_DETAILS_REQUEST, LOAD_PRODUCT_DETAILS_SUCCESS, LOAD_PRODUCT_DETAILS_FAILURE, SET_ALL_FILTERS_INFO } from '../reducers/types';\n\nfunction loadProductsAPI(data) {\n  return axios.post('/api/jaymall/products', data);\n}\n\nfunction* loadProducts(action) {\n  try {\n    const result = yield call(loadProductsAPI, action.payload);\n    let noMore = false;\n\n    if (result.data.products.length % 8 || result.data.products.length === 0) {\n      noMore = true;\n    }\n\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      payload: result.data,\n      noMoreProducts: noMore\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction uploadProductAPI(data) {\n  return axios.post('/api/jaymall/uploadProduct', data);\n}\n\nfunction* uploadProduct(action) {\n  try {\n    const result = yield call(uploadProductAPI, action.payload);\n    yield put({\n      type: UPLOAD_PRODUCT_SUCCESS,\n      payload: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_PRODUCT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction uploadImageAPI(data) {\n  console.log(data, 'Jaymall uploadImageAPI data');\n  return axios.post('/api/jaymall/uploadImage', data.formData, data.config);\n}\n\nfunction* uploadImage(action) {\n  try {\n    const result = yield call(uploadImageAPI, action.payload);\n    yield put({\n      type: UPLOAD_IMAGE_SUCCESS,\n      payload: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: UPLOAD_IMAGE_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction loadProductDetailsAPI(data) {\n  return axios.get(`/api/jaymall/product_by_id?id=${data}&type=single`);\n}\n\nfunction* loadProductDetails(action) {\n  try {\n    const result = yield call(loadProductDetailsAPI, action.payload);\n    yield put({\n      type: LOAD_PRODUCT_DETAILS_SUCCESS,\n      payload: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LOAD_PRODUCT_DETAILS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchLoadProducts() {\n  yield takeLatest([LOAD_PRODUCTS_REQUEST, SET_ALL_FILTERS_INFO], loadProducts);\n}\n\nfunction* watchUploadImage() {\n  yield takeLatest(UPLOAD_IMAGE_REQUEST, uploadImage);\n}\n\nfunction* watchUploadProduct() {\n  yield takeLatest(UPLOAD_PRODUCT_REQUEST, uploadProduct);\n}\n\nfunction* watchLoadProductDetail() {\n  yield takeLatest(LOAD_PRODUCT_DETAILS_REQUEST, loadProductDetails);\n}\n\nexport default function* jaymallSaga() {\n  yield all([fork(watchLoadProducts), fork(watchUploadProduct), fork(watchUploadImage), fork(watchLoadProductDetail)]);\n}","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/sagas/jaymall.js"],"names":["all","fork","put","call","takeLatest","axios","LOAD_PRODUCTS_REQUEST","LOAD_PRODUCTS_SUCCESS","LOAD_PRODUCTS_FAILURE","UPLOAD_PRODUCT_REQUEST","UPLOAD_PRODUCT_SUCCESS","UPLOAD_PRODUCT_FAILURE","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILURE","LOAD_PRODUCT_DETAILS_REQUEST","LOAD_PRODUCT_DETAILS_SUCCESS","LOAD_PRODUCT_DETAILS_FAILURE","SET_ALL_FILTERS_INFO","loadProductsAPI","data","post","loadProducts","action","result","payload","noMore","products","length","type","noMoreProducts","error","console","response","uploadProductAPI","uploadProduct","uploadImageAPI","log","formData","config","uploadImage","loadProductDetailsAPI","get","loadProductDetails","watchLoadProducts","watchUploadImage","watchUploadProduct","watchLoadProductDetail","jaymallSaga"],"mappings":"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","sourcesContent":["import { all, fork, put, call, takeLatest } from 'redux-saga/effects'\nimport axios from 'axios';\n\nimport {\n  LOAD_PRODUCTS_REQUEST, LOAD_PRODUCTS_SUCCESS, LOAD_PRODUCTS_FAILURE,\n  UPLOAD_PRODUCT_REQUEST, UPLOAD_PRODUCT_SUCCESS, UPLOAD_PRODUCT_FAILURE,\n  UPLOAD_IMAGE_REQUEST, UPLOAD_IMAGE_SUCCESS, UPLOAD_IMAGE_FAILURE,\n  LOAD_PRODUCT_DETAILS_REQUEST, LOAD_PRODUCT_DETAILS_SUCCESS, LOAD_PRODUCT_DETAILS_FAILURE,\n  SET_ALL_FILTERS_INFO,\n} from '../reducers/types'\n\nfunction loadProductsAPI(data) {\n  return axios.post('/api/jaymall/products', data)\n}\n\nfunction* loadProducts(action) {\n  try {\n    const result = yield call(loadProductsAPI, action.payload);\n    let noMore = false;\n    if (result.data.products.length % 8 || result.data.products.length === 0) {\n      noMore = true;\n    }\n    yield put({\n      type: LOAD_PRODUCTS_SUCCESS,\n      payload: result.data,\n      noMoreProducts: noMore,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: LOAD_PRODUCTS_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction uploadProductAPI(data) {\n  return axios.post('/api/jaymall/uploadProduct', data)\n}\n\nfunction* uploadProduct(action) {\n  try {\n    const result = yield call(uploadProductAPI, action.payload);\n    yield put({\n      type: UPLOAD_PRODUCT_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: UPLOAD_PRODUCT_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction uploadImageAPI(data) {\n  console.log(data, 'Jaymall uploadImageAPI data')\n  return axios.post('/api/jaymall/uploadImage', data.formData, data.config)\n}\n\nfunction* uploadImage(action) {\n  try {\n    const result = yield call(uploadImageAPI, action.payload);\n    yield put({\n      type: UPLOAD_IMAGE_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: UPLOAD_IMAGE_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction loadProductDetailsAPI(data) {\n  return axios.get(`/api/jaymall/product_by_id?id=${data}&type=single`)\n}\n\nfunction* loadProductDetails(action) {\n  try {\n    const result = yield call(loadProductDetailsAPI, action.payload);\n    yield put({\n      type: LOAD_PRODUCT_DETAILS_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: LOAD_PRODUCT_DETAILS_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction* watchLoadProducts() {\n  yield takeLatest([LOAD_PRODUCTS_REQUEST, SET_ALL_FILTERS_INFO], loadProducts)\n}\n\nfunction* watchUploadImage() {\n  yield takeLatest(UPLOAD_IMAGE_REQUEST, uploadImage)\n}\n\nfunction* watchUploadProduct() {\n  yield takeLatest(UPLOAD_PRODUCT_REQUEST, uploadProduct)\n}\n\nfunction* watchLoadProductDetail() {\n  yield takeLatest(LOAD_PRODUCT_DETAILS_REQUEST, loadProductDetails)\n}\n\n\nexport default function* jaymallSaga() {\n  yield all([\n    fork(watchLoadProducts),\n    fork(watchUploadProduct),\n    fork(watchUploadImage),\n    fork(watchLoadProductDetail),\n  ])\n}"]},"metadata":{},"sourceType":"module"}