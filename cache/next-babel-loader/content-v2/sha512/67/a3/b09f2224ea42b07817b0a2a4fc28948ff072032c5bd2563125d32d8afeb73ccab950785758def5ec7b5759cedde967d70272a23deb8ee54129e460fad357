{"ast":null,"code":"import _defineProperty from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(createPost),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(loadPosts),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(loadPost),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(uploadDataset),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(watchCreatePost),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPosts),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadPost),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadDataset),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(blogSaga);\n\nimport { all, fork, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { CREATE_BLOG_POST_REQUEST, CREATE_BLOG_POST_SUCCESS, CREATE_BLOG_POST_FAILURE, LOAD_BLOG_POSTS_REQUEST, LOAD_BLOG_POSTS_SUCCESS, LOAD_BLOG_POSTS_FAILURE, RESET_LOAD_BLOG_POSTS, LOAD_BLOG_POST_REQUEST, LOAD_BLOG_POST_SUCCESS, LOAD_BLOG_POST_FAILURE, UPLOAD_BLOG_DATASET_REQUEST, UPLOAD_BLOG_DATASET_SUCCESS, UPLOAD_BLOG_DATASET_FAILURE } from '../reducers/types';\n\nfunction createPostAPI(data) {\n  return axios.post('/api/blog/createPost', data);\n}\n\nfunction createPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function createPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(createPostAPI, action.payload);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: CREATE_BLOG_POST_SUCCESS,\n            payload: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: CREATE_BLOG_POST_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction loadPostsAPI(data) {\n  return axios.post('/api/blog/blogs', data);\n}\n\nfunction loadPosts(action) {\n  var result, noMore;\n  return _regeneratorRuntime.wrap(function loadPosts$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loadPostsAPI, action.payload);\n\n        case 3:\n          result = _context2.sent;\n          noMore = false;\n\n          if (result.data.blogs.length % 6 || result.data.blogs.length === 0) {\n            noMore = true;\n          }\n\n          _context2.next = 8;\n          return put({\n            type: LOAD_BLOG_POSTS_SUCCESS,\n            payload: result.data,\n            noMorePosts: noMore\n          });\n\n        case 8:\n          _context2.next = 15;\n          break;\n\n        case 10:\n          _context2.prev = 10;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 15;\n          return put({\n            type: LOAD_BLOG_POSTS_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 10]]);\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(\"/api/blog/\".concat(data.postId));\n}\n\nfunction loadPost(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function loadPost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(loadPostAPI, action.payload);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOAD_BLOG_POST_SUCCESS,\n            payload: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LOAD_BLOG_POST_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction uploadDatasetAPI(data) {\n  return axios.post(\"/api/blog/uploadDataset\", data.formData, data.config);\n}\n\nfunction uploadDataset(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadDataset$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(uploadDatasetAPI, action.payload);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: UPLOAD_BLOG_DATASET_SUCCESS,\n            payload: _objectSpread(_objectSpread({}, result.data), {}, {\n              file: action.payload.file,\n              dataType: action.payload.dataType\n            })\n          });\n\n        case 6:\n          _context4.next = 13;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 13;\n          return put({\n            type: UPLOAD_BLOG_DATASET_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction watchCreatePost() {\n  return _regeneratorRuntime.wrap(function watchCreatePost$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return takeLatest(CREATE_BLOG_POST_REQUEST, createPost);\n\n        case 2:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction watchLoadPosts() {\n  return _regeneratorRuntime.wrap(function watchLoadPosts$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return takeLatest([LOAD_BLOG_POSTS_REQUEST, RESET_LOAD_BLOG_POSTS], loadPosts);\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction watchLoadPost() {\n  return _regeneratorRuntime.wrap(function watchLoadPost$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(LOAD_BLOG_POST_REQUEST, loadPost);\n\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction watchUploadDataset() {\n  return _regeneratorRuntime.wrap(function watchUploadDataset$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(UPLOAD_BLOG_DATASET_REQUEST, uploadDataset);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nexport default function blogSaga() {\n  return _regeneratorRuntime.wrap(function blogSaga$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return all([fork(watchCreatePost), fork(watchLoadPosts), fork(watchLoadPost), fork(watchUploadDataset)]);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/sagas/blog.js"],"names":["createPost","loadPosts","loadPost","uploadDataset","watchCreatePost","watchLoadPosts","watchLoadPost","watchUploadDataset","blogSaga","all","fork","put","call","takeLatest","axios","CREATE_BLOG_POST_REQUEST","CREATE_BLOG_POST_SUCCESS","CREATE_BLOG_POST_FAILURE","LOAD_BLOG_POSTS_REQUEST","LOAD_BLOG_POSTS_SUCCESS","LOAD_BLOG_POSTS_FAILURE","RESET_LOAD_BLOG_POSTS","LOAD_BLOG_POST_REQUEST","LOAD_BLOG_POST_SUCCESS","LOAD_BLOG_POST_FAILURE","UPLOAD_BLOG_DATASET_REQUEST","UPLOAD_BLOG_DATASET_SUCCESS","UPLOAD_BLOG_DATASET_FAILURE","createPostAPI","data","post","action","payload","result","type","console","error","response","loadPostsAPI","noMore","blogs","length","noMorePosts","loadPostAPI","get","postId","uploadDatasetAPI","formData","config","file","dataType"],"mappings":";;;;;;;oDAeUA,U;qDAoBAC,S;qDAyBAC,Q;qDAoBAC,a;qDAoBAC,e;qDAIAC,c;qDAIAC,a;qDAIAC,kB;qDAKeC,Q;;AArHzB,SAASC,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,wBADF,EAC4BC,wBAD5B,EACsDC,wBADtD,EAEEC,uBAFF,EAE2BC,uBAF3B,EAEoDC,uBAFpD,EAGEC,qBAHF,EAIEC,sBAJF,EAI0BC,sBAJ1B,EAIkDC,sBAJlD,EAKEC,2BALF,EAK+BC,2BAL/B,EAK4DC,2BAL5D,QAMO,mBANP;;AAQA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAOf,KAAK,CAACgB,IAAN,CAAW,sBAAX,EAAmCD,IAAnC,CAAP;AACD;;AAED,SAAU7B,UAAV,CAAqB+B,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMnB,IAAI,CAACgB,aAAD,EAAgBG,MAAM,CAACC,OAAvB,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAAA;AAGI,iBAAMtB,GAAG,CAAC;AACRuB,YAAAA,IAAI,EAAElB,wBADE;AAERgB,YAAAA,OAAO,EAAEC,MAAM,CAACJ;AAFR,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIM,UAAAA,OAAO,CAACC,KAAR;AARJ;AASI,iBAAMzB,GAAG,CAAC;AACRuB,YAAAA,IAAI,EAAEjB,wBADE;AAERmB,YAAAA,KAAK,EAAE,YAAMC,QAAN,CAAeR;AAFd,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASS,YAAT,CAAsBT,IAAtB,EAA4B;AAC1B,SAAOf,KAAK,CAACgB,IAAN,CAAW,iBAAX,EAA8BD,IAA9B,CAAP;AACD;;AAED,SAAU5B,SAAV,CAAoB8B,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMnB,IAAI,CAAC0B,YAAD,EAAeP,MAAM,CAACC,OAAtB,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAGQM,UAAAA,MAHR,GAGiB,KAHjB;;AAII,cAAIN,MAAM,CAACJ,IAAP,CAAYW,KAAZ,CAAkBC,MAAlB,GAA2B,CAA3B,IAAgCR,MAAM,CAACJ,IAAP,CAAYW,KAAZ,CAAkBC,MAAlB,KAA6B,CAAjE,EAAoE;AAClEF,YAAAA,MAAM,GAAG,IAAT;AACD;;AANL;AAOI,iBAAM5B,GAAG,CAAC;AACRuB,YAAAA,IAAI,EAAEf,uBADE;AAERa,YAAAA,OAAO,EAAEC,MAAM,CAACJ,IAFR;AAGRa,YAAAA,WAAW,EAAEH;AAHL,WAAD,CAAT;;AAPJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaIJ,UAAAA,OAAO,CAACC,KAAR;AAbJ;AAcI,iBAAMzB,GAAG,CAAC;AACRuB,YAAAA,IAAI,EAAEd,uBADE;AAERgB,YAAAA,KAAK,EAAE,aAAMC,QAAN,CAAeR;AAFd,WAAD,CAAT;;AAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAqBA,SAASc,WAAT,CAAqBd,IAArB,EAA2B;AACzB,SAAOf,KAAK,CAAC8B,GAAN,qBAAuBf,IAAI,CAACgB,MAA5B,EAAP;AACD;;AAED,SAAU3C,QAAV,CAAmB6B,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMnB,IAAI,CAAC+B,WAAD,EAAcZ,MAAM,CAACC,OAArB,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAAA;AAGI,iBAAMtB,GAAG,CAAC;AACRuB,YAAAA,IAAI,EAAEX,sBADE;AAERS,YAAAA,OAAO,EAAEC,MAAM,CAACJ;AAFR,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQIM,UAAAA,OAAO,CAACC,KAAR;AARJ;AASI,iBAAMzB,GAAG,CAAC;AACRuB,YAAAA,IAAI,EAAEV,sBADE;AAERY,YAAAA,KAAK,EAAE,aAAMC,QAAN,CAAeR;AAFd,WAAD,CAAT;;AATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBA,SAASiB,gBAAT,CAA0BjB,IAA1B,EAAgC;AAC9B,SAAOf,KAAK,CAACgB,IAAN,4BAAsCD,IAAI,CAACkB,QAA3C,EAAqDlB,IAAI,CAACmB,MAA1D,CAAP;AACD;;AAED,SAAU7C,aAAV,CAAwB4B,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEmB,iBAAMnB,IAAI,CAACkC,gBAAD,EAAmBf,MAAM,CAACC,OAA1B,CAAV;;AAFnB;AAEUC,UAAAA,MAFV;AAAA;AAGI,iBAAMtB,GAAG,CAAC;AACRuB,YAAAA,IAAI,EAAER,2BADE;AAERM,YAAAA,OAAO,kCACFC,MAAM,CAACJ,IADL;AAELoB,cAAAA,IAAI,EAAElB,MAAM,CAACC,OAAP,CAAeiB,IAFhB;AAGLC,cAAAA,QAAQ,EAAEnB,MAAM,CAACC,OAAP,CAAekB;AAHpB;AAFC,WAAD,CAAT;;AAHJ;AAAA;AAAA;;AAAA;AAAA;AAAA;AAYIf,UAAAA,OAAO,CAACC,KAAR;AAZJ;AAaI,iBAAMzB,GAAG,CAAC;AACRuB,YAAAA,IAAI,EAAEP,2BADE;AAERS,YAAAA,KAAK,EAAE,aAAMC,QAAN,CAAeR;AAFd,WAAD,CAAT;;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAoBA,SAAUzB,eAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMS,UAAU,CAACE,wBAAD,EAA2Bf,UAA3B,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUK,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMQ,UAAU,CAAC,CAACK,uBAAD,EAA0BG,qBAA1B,CAAD,EAAmDpB,SAAnD,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUK,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMO,UAAU,CAACS,sBAAD,EAAyBpB,QAAzB,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,SAAUK,kBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACE,iBAAMM,UAAU,CAACY,2BAAD,EAA8BtB,aAA9B,CAAhB;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAe,SAAUK,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,GAAG,CAAC,CACRC,IAAI,CAACN,eAAD,CADI,EAERM,IAAI,CAACL,cAAD,CAFI,EAGRK,IAAI,CAACJ,aAAD,CAHI,EAIRI,IAAI,CAACH,kBAAD,CAJI,CAAD,CAAT;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { all, fork, put, call, takeLatest } from 'redux-saga/effects'\nimport axios from 'axios';\n\nimport {\n  CREATE_BLOG_POST_REQUEST, CREATE_BLOG_POST_SUCCESS, CREATE_BLOG_POST_FAILURE,\n  LOAD_BLOG_POSTS_REQUEST, LOAD_BLOG_POSTS_SUCCESS, LOAD_BLOG_POSTS_FAILURE,\n  RESET_LOAD_BLOG_POSTS,\n  LOAD_BLOG_POST_REQUEST, LOAD_BLOG_POST_SUCCESS, LOAD_BLOG_POST_FAILURE,\n  UPLOAD_BLOG_DATASET_REQUEST, UPLOAD_BLOG_DATASET_SUCCESS, UPLOAD_BLOG_DATASET_FAILURE,\n} from '../reducers/types'\n\nfunction createPostAPI(data) {\n  return axios.post('/api/blog/createPost', data)\n}\n\nfunction* createPost(action) {\n  try {\n    const result = yield call(createPostAPI, action.payload);\n    yield put({\n      type: CREATE_BLOG_POST_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: CREATE_BLOG_POST_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction loadPostsAPI(data) {\n  return axios.post('/api/blog/blogs', data)\n}\n\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.payload);\n    let noMore = false;\n    if (result.data.blogs.length % 6 || result.data.blogs.length === 0) {\n      noMore = true;\n    }\n    yield put({\n      type: LOAD_BLOG_POSTS_SUCCESS,\n      payload: result.data,\n      noMorePosts: noMore,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: LOAD_BLOG_POSTS_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction loadPostAPI(data) {\n  return axios.get(`/api/blog/${data.postId}`)\n}\n\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.payload);\n    yield put({\n      type: LOAD_BLOG_POST_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: LOAD_BLOG_POST_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction uploadDatasetAPI(data) {\n  return axios.post(`/api/blog/uploadDataset`, data.formData, data.config)\n}\n\nfunction* uploadDataset(action) {\n  try {\n    const result = yield call(uploadDatasetAPI, action.payload);\n    yield put({\n      type: UPLOAD_BLOG_DATASET_SUCCESS,\n      payload: {\n        ...result.data,\n        file: action.payload.file,\n        dataType: action.payload.dataType,\n      },\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: UPLOAD_BLOG_DATASET_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction* watchCreatePost() {\n  yield takeLatest(CREATE_BLOG_POST_REQUEST, createPost)\n}\n\nfunction* watchLoadPosts() {\n  yield takeLatest([LOAD_BLOG_POSTS_REQUEST, RESET_LOAD_BLOG_POSTS], loadPosts)\n}\n\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_BLOG_POST_REQUEST, loadPost)\n}\n\nfunction* watchUploadDataset() {\n  yield takeLatest(UPLOAD_BLOG_DATASET_REQUEST, uploadDataset)\n}\n\n\nexport default function* blogSaga() {\n  yield all([\n    fork(watchCreatePost),\n    fork(watchLoadPosts),\n    fork(watchLoadPost),\n    fork(watchUploadDataset),\n  ])\n}"]},"metadata":{},"sourceType":"module"}