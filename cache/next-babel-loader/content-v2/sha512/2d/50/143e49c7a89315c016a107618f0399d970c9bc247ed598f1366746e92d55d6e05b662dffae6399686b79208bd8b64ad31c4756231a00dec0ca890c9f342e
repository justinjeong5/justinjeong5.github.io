{"ast":null,"code":"import produce from 'immer';\nimport { REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE, LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE, LOGOUT_USER_REQUEST, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILURE, AUTHENTICATE_USER_REQUEST, AUTHENTICATE_USER_SUCCESS, AUTHENTICATE_USER_FAILURE, EDIT_USER_REQUEST, EDIT_USER_SUCCESS, EDIT_USER_FAILURE, CONFIRM_USER_REQUEST, CONFIRM_USER_SUCCESS, CONFIRM_USER_FAILURE, UPLOAD_USER_IMAGE_REQUEST, UPLOAD_USER_IMAGE_SUCCESS, UPLOAD_USER_IMAGE_FAILURE } from './types';\nconst initialState = {\n  currentUser: {},\n  message: '',\n  registerUserLoading: false,\n  registerUserDone: false,\n  registerUserError: null,\n  loginUserLoading: false,\n  loginUserDone: false,\n  loginUserError: null,\n  logoutUserLoading: false,\n  logoutUserDone: false,\n  logoutUserError: null,\n  authenticateUserLoading: false,\n  authenticateUserDone: false,\n  authenticateUserError: null,\n  confirmUserLoading: false,\n  confirmUserDone: false,\n  confirmUserError: null,\n  editUserLoading: false,\n  editUserDone: false,\n  editUserError: null,\n  uploadUserImageLoading: false,\n  uploadUserImageDone: false,\n  uploadUserImageError: null\n};\n\nconst user = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case REGISTER_USER_REQUEST:\n        draft.registerUserLoading = true;\n        draft.registerUserDone = false;\n        draft.registerUserError = null;\n        break;\n\n      case REGISTER_USER_SUCCESS:\n        draft.registerUserLoading = false;\n        draft.registerUserDone = true;\n        draft.message = action.payload.message;\n        break;\n\n      case REGISTER_USER_FAILURE:\n        draft.registerUserLoading = false;\n        draft.registerUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n\n      case LOGIN_USER_REQUEST:\n        draft.loginUserLoading = true;\n        draft.loginUserDone = false;\n        draft.loginUserError = null;\n        break;\n\n      case LOGIN_USER_SUCCESS:\n        draft.loginUserLoading = false;\n        draft.loginUserDone = true;\n        draft.currentUser.userId = action.payload.userId;\n        draft.message = action.payload.message;\n        break;\n\n      case LOGIN_USER_FAILURE:\n        draft.loginUserLoading = false;\n        draft.loginUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n\n      case LOGOUT_USER_REQUEST:\n        draft.logoutUserLoading = true;\n        draft.logoutUserDone = false;\n        draft.logoutUserError = null;\n        break;\n\n      case LOGOUT_USER_SUCCESS:\n        draft.logoutUserLoading = false;\n        draft.logoutUserDone = true;\n        draft.currentUser = {};\n        draft.message = action.payload.message;\n        break;\n\n      case LOGOUT_USER_FAILURE:\n        draft.logoutUserLoading = false;\n        draft.logoutUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n\n      case AUTHENTICATE_USER_REQUEST:\n        draft.authenticateUserLoading = true;\n        draft.authenticateUserDone = false;\n        draft.authenticateUserError = null;\n        break;\n\n      case AUTHENTICATE_USER_SUCCESS:\n        draft.currentUser = action.payload.user;\n        draft.message = action.payload.message;\n        draft.authenticateUserLoading = false;\n        draft.authenticateUserDone = true;\n        draft.registerUserLoading = false;\n        draft.registerUserDone = false;\n        draft.registerUserError = null;\n        draft.loginUserLoading = false;\n        draft.loginUserDone = false;\n        draft.loginUserError = null;\n        draft.logoutUserLoading = false;\n        draft.logoutUserDone = false;\n        draft.logoutUserError = null;\n        draft.confirmUserLoading = false;\n        draft.confirmUserDone = false;\n        draft.confirmUserError = null;\n        draft.editUserLoading = false;\n        draft.editUserDone = false;\n        draft.editUserError = null;\n        break;\n\n      case AUTHENTICATE_USER_FAILURE:\n        draft.currentUser = action.error.user;\n        draft.authenticateUserLoading = false;\n        draft.authenticateUserError = action.error.err;\n        draft.message = action.error.message;\n        break;\n\n      case CONFIRM_USER_REQUEST:\n        draft.confirmUserLoading = true;\n        draft.confirmUserDone = false;\n        draft.confirmUserError = null;\n        break;\n\n      case CONFIRM_USER_SUCCESS:\n        draft.confirmUserLoading = false;\n        draft.confirmUserDone = true;\n        draft.message = action.payload.message;\n        break;\n\n      case CONFIRM_USER_FAILURE:\n        draft.confirmUserLoading = false;\n        draft.confirmUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n\n      case EDIT_USER_REQUEST:\n        draft.editUserLoading = true;\n        draft.editUserDone = false;\n        draft.editUserError = null;\n        break;\n\n      case EDIT_USER_SUCCESS:\n        draft.editUserLoading = false;\n        draft.editUserDone = true;\n        draft.currentUser.isAuth = true;\n        draft.message = action.payload.message;\n        break;\n\n      case EDIT_USER_FAILURE:\n        draft.editUserLoading = false;\n        draft.editUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n\n      case UPLOAD_USER_IMAGE_REQUEST:\n        draft.uploadUserImageLoading = true;\n        draft.uploadUserImageDone = false;\n        draft.uploadUserImageError = null;\n        break;\n\n      case UPLOAD_USER_IMAGE_SUCCESS:\n        draft.uploadUserImageLoading = false;\n        draft.uploadUserImageDone = true;\n        draft.currentUser.image = action.payload.url;\n        draft.message = action.payload.message;\n        break;\n\n      case UPLOAD_USER_IMAGE_FAILURE:\n        draft.uploadUserImageLoading = false;\n        draft.uploadUserImageError = action.error.code;\n        draft.message = action.error.message;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default user;","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/reducers/user.js"],"names":["produce","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","LOGOUT_USER_REQUEST","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILURE","AUTHENTICATE_USER_REQUEST","AUTHENTICATE_USER_SUCCESS","AUTHENTICATE_USER_FAILURE","EDIT_USER_REQUEST","EDIT_USER_SUCCESS","EDIT_USER_FAILURE","CONFIRM_USER_REQUEST","CONFIRM_USER_SUCCESS","CONFIRM_USER_FAILURE","UPLOAD_USER_IMAGE_REQUEST","UPLOAD_USER_IMAGE_SUCCESS","UPLOAD_USER_IMAGE_FAILURE","initialState","currentUser","message","registerUserLoading","registerUserDone","registerUserError","loginUserLoading","loginUserDone","loginUserError","logoutUserLoading","logoutUserDone","logoutUserError","authenticateUserLoading","authenticateUserDone","authenticateUserError","confirmUserLoading","confirmUserDone","confirmUserError","editUserLoading","editUserDone","editUserError","uploadUserImageLoading","uploadUserImageDone","uploadUserImageError","user","state","action","draft","type","payload","error","code","userId","err","isAuth","image","url"],"mappings":"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","sourcesContent":["import produce from 'immer'\n\nimport {\n  REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE,\n  LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE,\n  LOGOUT_USER_REQUEST, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILURE,\n  AUTHENTICATE_USER_REQUEST, AUTHENTICATE_USER_SUCCESS, AUTHENTICATE_USER_FAILURE,\n  EDIT_USER_REQUEST, EDIT_USER_SUCCESS, EDIT_USER_FAILURE,\n  CONFIRM_USER_REQUEST, CONFIRM_USER_SUCCESS, CONFIRM_USER_FAILURE,\n  UPLOAD_USER_IMAGE_REQUEST, UPLOAD_USER_IMAGE_SUCCESS, UPLOAD_USER_IMAGE_FAILURE,\n} from './types'\n\nconst initialState = {\n  currentUser: {},\n  message: '',\n\n  registerUserLoading: false,\n  registerUserDone: false,\n  registerUserError: null,\n  loginUserLoading: false,\n  loginUserDone: false,\n  loginUserError: null,\n  logoutUserLoading: false,\n  logoutUserDone: false,\n  logoutUserError: null,\n  authenticateUserLoading: false,\n  authenticateUserDone: false,\n  authenticateUserError: null,\n  confirmUserLoading: false,\n  confirmUserDone: false,\n  confirmUserError: null,\n  editUserLoading: false,\n  editUserDone: false,\n  editUserError: null,\n  uploadUserImageLoading: false,\n  uploadUserImageDone: false,\n  uploadUserImageError: null,\n}\n\nconst user = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case REGISTER_USER_REQUEST:\n        draft.registerUserLoading = true;\n        draft.registerUserDone = false;\n        draft.registerUserError = null;\n        break;\n      case REGISTER_USER_SUCCESS:\n        draft.registerUserLoading = false;\n        draft.registerUserDone = true;\n        draft.message = action.payload.message;\n        break;\n      case REGISTER_USER_FAILURE:\n        draft.registerUserLoading = false;\n        draft.registerUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n      case LOGIN_USER_REQUEST:\n        draft.loginUserLoading = true;\n        draft.loginUserDone = false;\n        draft.loginUserError = null;\n        break;\n      case LOGIN_USER_SUCCESS:\n        draft.loginUserLoading = false;\n        draft.loginUserDone = true;\n        draft.currentUser.userId = action.payload.userId;\n        draft.message = action.payload.message;\n        break;\n      case LOGIN_USER_FAILURE:\n        draft.loginUserLoading = false;\n        draft.loginUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n      case LOGOUT_USER_REQUEST:\n        draft.logoutUserLoading = true;\n        draft.logoutUserDone = false;\n        draft.logoutUserError = null;\n        break;\n      case LOGOUT_USER_SUCCESS:\n        draft.logoutUserLoading = false;\n        draft.logoutUserDone = true;\n        draft.currentUser = {};\n        draft.message = action.payload.message;\n        break;\n      case LOGOUT_USER_FAILURE:\n        draft.logoutUserLoading = false;\n        draft.logoutUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n      case AUTHENTICATE_USER_REQUEST:\n        draft.authenticateUserLoading = true;\n        draft.authenticateUserDone = false;\n        draft.authenticateUserError = null;\n        break;\n      case AUTHENTICATE_USER_SUCCESS:\n        draft.currentUser = action.payload.user;\n        draft.message = action.payload.message;\n\n        draft.authenticateUserLoading = false;\n        draft.authenticateUserDone = true;\n        draft.registerUserLoading = false;\n        draft.registerUserDone = false;\n        draft.registerUserError = null;\n        draft.loginUserLoading = false;\n        draft.loginUserDone = false;\n        draft.loginUserError = null;\n        draft.logoutUserLoading = false;\n        draft.logoutUserDone = false;\n        draft.logoutUserError = null;\n        draft.confirmUserLoading = false;\n        draft.confirmUserDone = false;\n        draft.confirmUserError = null;\n        draft.editUserLoading = false;\n        draft.editUserDone = false;\n        draft.editUserError = null;\n        break;\n      case AUTHENTICATE_USER_FAILURE:\n        draft.currentUser = action.error.user;\n        draft.authenticateUserLoading = false;\n        draft.authenticateUserError = action.error.err;\n        draft.message = action.error.message;\n        break;\n      case CONFIRM_USER_REQUEST:\n        draft.confirmUserLoading = true;\n        draft.confirmUserDone = false;\n        draft.confirmUserError = null;\n        break;\n      case CONFIRM_USER_SUCCESS:\n        draft.confirmUserLoading = false;\n        draft.confirmUserDone = true;\n        draft.message = action.payload.message;\n        break;\n      case CONFIRM_USER_FAILURE:\n        draft.confirmUserLoading = false;\n        draft.confirmUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n      case EDIT_USER_REQUEST:\n        draft.editUserLoading = true;\n        draft.editUserDone = false;\n        draft.editUserError = null;\n        break;\n      case EDIT_USER_SUCCESS:\n        draft.editUserLoading = false;\n        draft.editUserDone = true;\n        draft.currentUser.isAuth = true;\n        draft.message = action.payload.message;\n        break;\n      case EDIT_USER_FAILURE:\n        draft.editUserLoading = false;\n        draft.editUserError = action.error.code;\n        draft.message = action.error.message;\n        break;\n      case UPLOAD_USER_IMAGE_REQUEST:\n        draft.uploadUserImageLoading = true;\n        draft.uploadUserImageDone = false;\n        draft.uploadUserImageError = null;\n        break;\n      case UPLOAD_USER_IMAGE_SUCCESS:\n        draft.uploadUserImageLoading = false;\n        draft.uploadUserImageDone = true;\n        draft.currentUser.image = action.payload.url;\n        draft.message = action.payload.message;\n        break;\n      case UPLOAD_USER_IMAGE_FAILURE:\n        draft.uploadUserImageLoading = false;\n        draft.uploadUserImageError = action.error.code;\n        draft.message = action.error.message;\n        break;\n      default:\n        break;\n    }\n  });\n}\n\nexport default user;"]},"metadata":{},"sourceType":"module"}