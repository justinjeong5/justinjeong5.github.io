{"ast":null,"code":"import _regeneratorRuntime from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(register),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(login),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(logout),\n    _marked4 = /*#__PURE__*/_regeneratorRuntime.mark(authenticate),\n    _marked5 = /*#__PURE__*/_regeneratorRuntime.mark(confirm),\n    _marked6 = /*#__PURE__*/_regeneratorRuntime.mark(edit),\n    _marked7 = /*#__PURE__*/_regeneratorRuntime.mark(uploadUserImage),\n    _marked8 = /*#__PURE__*/_regeneratorRuntime.mark(watchRegister),\n    _marked9 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogin),\n    _marked10 = /*#__PURE__*/_regeneratorRuntime.mark(watchLogout),\n    _marked11 = /*#__PURE__*/_regeneratorRuntime.mark(watchAuthenticate),\n    _marked12 = /*#__PURE__*/_regeneratorRuntime.mark(watchConfirm),\n    _marked13 = /*#__PURE__*/_regeneratorRuntime.mark(watchEdit),\n    _marked14 = /*#__PURE__*/_regeneratorRuntime.mark(watchUploadUserImage),\n    _marked15 = /*#__PURE__*/_regeneratorRuntime.mark(userSaga);\n\nimport { all, fork, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE, LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE, LOGOUT_USER_REQUEST, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILURE, AUTHENTICATE_USER_REQUEST, AUTHENTICATE_USER_SUCCESS, AUTHENTICATE_USER_FAILURE, EDIT_USER_REQUEST, EDIT_USER_SUCCESS, EDIT_USER_FAILURE, CONFIRM_USER_REQUEST, CONFIRM_USER_SUCCESS, CONFIRM_USER_FAILURE, UPLOAD_USER_IMAGE_REQUEST, UPLOAD_USER_IMAGE_SUCCESS, UPLOAD_USER_IMAGE_FAILURE } from '../reducers/types';\n\nfunction registerAPI(data) {\n  return axios.post('/api/user/register', data);\n}\n\nfunction register(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function register$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return call(registerAPI, action.payload);\n\n        case 3:\n          result = _context.sent;\n          _context.next = 6;\n          return put({\n            type: REGISTER_USER_SUCCESS,\n            payload: result.data\n          });\n\n        case 6:\n          _context.next = 13;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.error(_context.t0);\n          _context.next = 13;\n          return put({\n            type: REGISTER_USER_FAILURE,\n            error: _context.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\n\nfunction loginAPI(data) {\n  return axios.post('/api/user/login', data);\n}\n\nfunction login(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function login$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return call(loginAPI, action.payload);\n\n        case 3:\n          result = _context2.sent;\n          _context2.next = 6;\n          return put({\n            type: LOGIN_USER_SUCCESS,\n            payload: result.data\n          });\n\n        case 6:\n          _context2.next = 13;\n          break;\n\n        case 8:\n          _context2.prev = 8;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.error(_context2.t0);\n          _context2.next = 13;\n          return put({\n            type: LOGIN_USER_FAILURE,\n            error: _context2.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 8]]);\n}\n\nfunction logoutAPI() {\n  return axios.get('/api/user/logout');\n}\n\nfunction logout() {\n  var result;\n  return _regeneratorRuntime.wrap(function logout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return call(logoutAPI);\n\n        case 3:\n          result = _context3.sent;\n          _context3.next = 6;\n          return put({\n            type: LOGOUT_USER_SUCCESS,\n            payload: result.data\n          });\n\n        case 6:\n          _context3.next = 13;\n          break;\n\n        case 8:\n          _context3.prev = 8;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 13;\n          return put({\n            type: LOGOUT_USER_FAILURE,\n            error: _context3.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 8]]);\n}\n\nfunction authenticateAPI() {\n  return axios.get('/api/user/auth');\n}\n\nfunction authenticate() {\n  var result;\n  return _regeneratorRuntime.wrap(function authenticate$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return call(authenticateAPI);\n\n        case 3:\n          result = _context4.sent;\n          _context4.next = 6;\n          return put({\n            type: AUTHENTICATE_USER_SUCCESS,\n            payload: result.data\n          });\n\n        case 6:\n          _context4.next = 13;\n          break;\n\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          console.error(_context4.t0);\n          _context4.next = 13;\n          return put({\n            type: AUTHENTICATE_USER_FAILURE,\n            error: _context4.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\n\nfunction confirmAPI(data) {\n  return axios.post('/api/user/confirm', data);\n}\n\nfunction confirm(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function confirm$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return call(confirmAPI, action.payload);\n\n        case 3:\n          result = _context5.sent;\n          _context5.next = 6;\n          return put({\n            type: CONFIRM_USER_SUCCESS,\n            payload: result.data\n          });\n\n        case 6:\n          _context5.next = 13;\n          break;\n\n        case 8:\n          _context5.prev = 8;\n          _context5.t0 = _context5[\"catch\"](0);\n          console.error(_context5.t0);\n          _context5.next = 13;\n          return put({\n            type: CONFIRM_USER_FAILURE,\n            error: _context5.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 8]]);\n}\n\nfunction editAPI(data) {\n  return axios.post('/api/user/edit', data);\n}\n\nfunction edit(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function edit$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return call(editAPI, action.payload);\n\n        case 3:\n          result = _context6.sent;\n          _context6.next = 6;\n          return put({\n            type: EDIT_USER_SUCCESS,\n            payload: result.data\n          });\n\n        case 6:\n          _context6.next = 13;\n          break;\n\n        case 8:\n          _context6.prev = 8;\n          _context6.t0 = _context6[\"catch\"](0);\n          console.error(_context6.t0);\n          _context6.next = 13;\n          return put({\n            type: EDIT_USER_FAILURE,\n            error: _context6.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 8]]);\n}\n\nfunction uploadUserImageAPI(data) {\n  return axios.post('/api/user/editImage', data.formData, data.config);\n}\n\nfunction uploadUserImage(action) {\n  var result;\n  return _regeneratorRuntime.wrap(function uploadUserImage$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.prev = 0;\n          _context7.next = 3;\n          return call(uploadUserImageAPI, action.payload);\n\n        case 3:\n          result = _context7.sent;\n          _context7.next = 6;\n          return put({\n            type: UPLOAD_USER_IMAGE_SUCCESS,\n            payload: result.data\n          });\n\n        case 6:\n          _context7.next = 13;\n          break;\n\n        case 8:\n          _context7.prev = 8;\n          _context7.t0 = _context7[\"catch\"](0);\n          console.error(_context7.t0);\n          _context7.next = 13;\n          return put({\n            type: UPLOAD_USER_IMAGE_FAILURE,\n            error: _context7.t0.response.data\n          });\n\n        case 13:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7, null, [[0, 8]]);\n}\n\nfunction watchRegister() {\n  return _regeneratorRuntime.wrap(function watchRegister$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(REGISTER_USER_REQUEST, register);\n\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction watchLogin() {\n  return _regeneratorRuntime.wrap(function watchLogin$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(LOGIN_USER_REQUEST, login);\n\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction watchLogout() {\n  return _regeneratorRuntime.wrap(function watchLogout$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return takeLatest(LOGOUT_USER_REQUEST, logout);\n\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction watchAuthenticate() {\n  return _regeneratorRuntime.wrap(function watchAuthenticate$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(AUTHENTICATE_USER_REQUEST, authenticate);\n\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction watchConfirm() {\n  return _regeneratorRuntime.wrap(function watchConfirm$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(CONFIRM_USER_REQUEST, confirm);\n\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction watchEdit() {\n  return _regeneratorRuntime.wrap(function watchEdit$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return takeLatest(EDIT_USER_REQUEST, edit);\n\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\nfunction watchUploadUserImage() {\n  return _regeneratorRuntime.wrap(function watchUploadUserImage$(_context14) {\n    while (1) {\n      switch (_context14.prev = _context14.next) {\n        case 0:\n          _context14.next = 2;\n          return takeLatest(UPLOAD_USER_IMAGE_REQUEST, uploadUserImage);\n\n        case 2:\n        case \"end\":\n          return _context14.stop();\n      }\n    }\n  }, _marked14);\n}\n\nexport default function userSaga() {\n  return _regeneratorRuntime.wrap(function userSaga$(_context15) {\n    while (1) {\n      switch (_context15.prev = _context15.next) {\n        case 0:\n          _context15.next = 2;\n          return all([fork(watchRegister), fork(watchLogin), fork(watchLogout), fork(watchAuthenticate), fork(watchEdit), fork(watchConfirm), fork(watchUploadUserImage)]);\n\n        case 2:\n        case \"end\":\n          return _context15.stop();\n      }\n    }\n  }, _marked15);\n}","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/sagas/user.js"],"names":["register","login","logout","authenticate","confirm","edit","uploadUserImage","watchRegister","watchLogin","watchLogout","watchAuthenticate","watchConfirm","watchEdit","watchUploadUserImage","userSaga","all","fork","put","call","takeLatest","axios","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","REGISTER_USER_FAILURE","LOGIN_USER_REQUEST","LOGIN_USER_SUCCESS","LOGIN_USER_FAILURE","LOGOUT_USER_REQUEST","LOGOUT_USER_SUCCESS","LOGOUT_USER_FAILURE","AUTHENTICATE_USER_REQUEST","AUTHENTICATE_USER_SUCCESS","AUTHENTICATE_USER_FAILURE","EDIT_USER_REQUEST","EDIT_USER_SUCCESS","EDIT_USER_FAILURE","CONFIRM_USER_REQUEST","CONFIRM_USER_SUCCESS","CONFIRM_USER_FAILURE","UPLOAD_USER_IMAGE_REQUEST","UPLOAD_USER_IMAGE_SUCCESS","UPLOAD_USER_IMAGE_FAILURE","registerAPI","data","post","action","payload","result","type","console","error","response","loginAPI","logoutAPI","get","authenticateAPI","confirmAPI","editAPI","uploadUserImageAPI","formData","config"],"mappings":"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","sourcesContent":["import { all, fork, put, call, takeLatest } from 'redux-saga/effects'\nimport axios from 'axios';\n\nimport {\n  REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS, REGISTER_USER_FAILURE,\n  LOGIN_USER_REQUEST, LOGIN_USER_SUCCESS, LOGIN_USER_FAILURE,\n  LOGOUT_USER_REQUEST, LOGOUT_USER_SUCCESS, LOGOUT_USER_FAILURE,\n  AUTHENTICATE_USER_REQUEST, AUTHENTICATE_USER_SUCCESS, AUTHENTICATE_USER_FAILURE,\n  EDIT_USER_REQUEST, EDIT_USER_SUCCESS, EDIT_USER_FAILURE,\n  CONFIRM_USER_REQUEST, CONFIRM_USER_SUCCESS, CONFIRM_USER_FAILURE,\n  UPLOAD_USER_IMAGE_REQUEST, UPLOAD_USER_IMAGE_SUCCESS, UPLOAD_USER_IMAGE_FAILURE,\n} from '../reducers/types'\n\nfunction registerAPI(data) {\n  return axios.post('/api/user/register', data)\n}\n\nfunction* register(action) {\n  try {\n    const result = yield call(registerAPI, action.payload);\n    yield put({\n      type: REGISTER_USER_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: REGISTER_USER_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction loginAPI(data) {\n  return axios.post('/api/user/login', data)\n}\n\nfunction* login(action) {\n  try {\n    const result = yield call(loginAPI, action.payload);\n    yield put({\n      type: LOGIN_USER_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: LOGIN_USER_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction logoutAPI() {\n  return axios.get('/api/user/logout')\n}\n\nfunction* logout() {\n  try {\n    const result = yield call(logoutAPI);\n    yield put({\n      type: LOGOUT_USER_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: LOGOUT_USER_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction authenticateAPI() {\n  return axios.get('/api/user/auth')\n}\n\nfunction* authenticate() {\n  try {\n    const result = yield call(authenticateAPI);\n    yield put({\n      type: AUTHENTICATE_USER_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: AUTHENTICATE_USER_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction confirmAPI(data) {\n  return axios.post('/api/user/confirm', data)\n}\n\nfunction* confirm(action) {\n  try {\n    const result = yield call(confirmAPI, action.payload);\n    yield put({\n      type: CONFIRM_USER_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: CONFIRM_USER_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction editAPI(data) {\n  return axios.post('/api/user/edit', data)\n}\n\nfunction* edit(action) {\n  try {\n    const result = yield call(editAPI, action.payload);\n    yield put({\n      type: EDIT_USER_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: EDIT_USER_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction uploadUserImageAPI(data) {\n  return axios.post('/api/user/editImage', data.formData, data.config)\n}\n\nfunction* uploadUserImage(action) {\n  try {\n    const result = yield call(uploadUserImageAPI, action.payload);\n    yield put({\n      type: UPLOAD_USER_IMAGE_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: UPLOAD_USER_IMAGE_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction* watchRegister() {\n  yield takeLatest(REGISTER_USER_REQUEST, register)\n}\n\nfunction* watchLogin() {\n  yield takeLatest(LOGIN_USER_REQUEST, login)\n}\n\nfunction* watchLogout() {\n  yield takeLatest(LOGOUT_USER_REQUEST, logout)\n}\n\nfunction* watchAuthenticate() {\n  yield takeLatest(AUTHENTICATE_USER_REQUEST, authenticate)\n}\n\nfunction* watchConfirm() {\n  yield takeLatest(CONFIRM_USER_REQUEST, confirm)\n}\n\nfunction* watchEdit() {\n  yield takeLatest(EDIT_USER_REQUEST, edit)\n}\n\nfunction* watchUploadUserImage() {\n  yield takeLatest(UPLOAD_USER_IMAGE_REQUEST, uploadUserImage)\n}\n\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchRegister),\n    fork(watchLogin),\n    fork(watchLogout),\n    fork(watchAuthenticate),\n    fork(watchEdit),\n    fork(watchConfirm),\n    fork(watchUploadUserImage),\n  ])\n}"]},"metadata":{},"sourceType":"module"}