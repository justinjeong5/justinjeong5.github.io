{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/justinjeong/Github/javascript/githubIo/client/components/Chatting/MainPanel/MessageHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Typography, Card, Avatar } from 'antd';\nimport { UnlockOutlined, LockOutlined, StarOutlined, StarFilled } from '@ant-design/icons';\nimport moment from 'moment';\nimport { CHANGE_FAVORITE_REQUEST, LOAD_FAVORITED_REQUEST, LOAD_FAVORITE_NUMBER_REQUEST } from '../../../reducers/types';\nconst {\n  Title\n} = Typography;\n\nfunction MessageHeader() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    currentChatRoom,\n    loadChatRoomsDone,\n    loadChatRoomsLoading\n  } = useSelector(state => state.chat);\n  const {\n    favoriteNumber,\n    isFavorited\n  } = useSelector(state => state.favorite);\n  useEffect(() => {\n    if (!(currentChatRoom !== null && currentChatRoom !== void 0 && currentChatRoom.private)) {\n      const payload = {\n        chatRoom: currentChatRoom._id\n      };\n      dispatch({\n        type: LOAD_FAVORITED_REQUEST,\n        payload\n      });\n      dispatch({\n        type: LOAD_FAVORITE_NUMBER_REQUEST,\n        payload\n      });\n    }\n  }, [currentChatRoom]);\n  const handleFavorite = useCallback(() => {\n    dispatch({\n      type: CHANGE_FAVORITE_REQUEST,\n      payload: {\n        chatRoom: currentChatRoom._id\n      }\n    });\n  }, [currentChatRoom]);\n  const rootDivStyle = useMemo(() => ({\n    width: '100%',\n    height: '100%',\n    padding: '1rem 2rem',\n    marginBottom: '1rem'\n  }), []);\n  const headerDivWrapperStyle = useMemo(() => ({\n    display: 'flex',\n    justifyContent: 'space-between'\n  }), []);\n  const titleWrapperStyle = useMemo(() => ({\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: 'calc(100vw - 620px)'\n  }), []);\n  const roomCreatedDivStyle = useMemo(() => ({\n    color: 'gray',\n    fontSize: '0.7rem'\n  }), []);\n  const roomStateIconStyle = useMemo(() => ({\n    marginTop: 20\n  }), []);\n  const roomCreatorCardStyle = useMemo(() => ({\n    width: '100%',\n    border: 'none'\n  }), []);\n  const avatarStyle = useMemo(() => ({\n    marginTop: -4,\n    marginRight: -12\n  }), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: rootDivStyle,\n    children: loadChatRoomsDone && (currentChatRoom === null || currentChatRoom === void 0 ? void 0 : currentChatRoom.title) && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: headerDivWrapperStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          level: 3,\n          style: titleWrapperStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [currentChatRoom.createdAt ? /*#__PURE__*/_jsxDEV(\"div\", {\n              style: roomCreatedDivStyle,\n              children: ` ${moment(currentChatRoom.createdAt).calendar()}  / 즐겨찾기 ${favoriteNumber}명`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              style: roomCreatedDivStyle,\n              children: `DIRECT MESSAGE  / 즐겨찾기 ${favoriteNumber}명`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this), currentChatRoom.title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: handleFavorite,\n              children: currentChatRoom.favorite === false ? /*#__PURE__*/_jsxDEV(StarOutlined, {\n                style: roomStateIconStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this) : isFavorited ? /*#__PURE__*/_jsxDEV(StarFilled, {\n                style: roomStateIconStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(StarOutlined, {\n                style: roomStateIconStyle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), currentChatRoom.private ? /*#__PURE__*/_jsxDEV(LockOutlined, {\n              style: roomStateIconStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(UnlockOutlined, {\n              style: roomStateIconStyle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: currentChatRoom.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: currentChatRoom._id && /*#__PURE__*/_jsxDEV(Card, {\n          style: roomCreatorCardStyle,\n          children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              style: avatarStyle,\n              src: currentChatRoom.writer.image\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 27\n            }, this),\n            title: currentChatRoom.writer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MessageHeader, \"lzcjbq2+c7m88bLm+lnKWzzn5VY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = MessageHeader;\nexport default MessageHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"MessageHeader\");","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/components/Chatting/MainPanel/MessageHeader.js"],"names":["React","useCallback","useEffect","useMemo","useDispatch","useSelector","Typography","Card","Avatar","UnlockOutlined","LockOutlined","StarOutlined","StarFilled","moment","CHANGE_FAVORITE_REQUEST","LOAD_FAVORITED_REQUEST","LOAD_FAVORITE_NUMBER_REQUEST","Title","MessageHeader","dispatch","currentChatRoom","loadChatRoomsDone","loadChatRoomsLoading","state","chat","favoriteNumber","isFavorited","favorite","private","payload","chatRoom","_id","type","handleFavorite","rootDivStyle","width","height","padding","marginBottom","headerDivWrapperStyle","display","justifyContent","titleWrapperStyle","roomCreatedDivStyle","color","fontSize","roomStateIconStyle","marginTop","roomCreatorCardStyle","border","avatarStyle","marginRight","title","createdAt","calendar","description","writer","image","name"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Typography, Card, Avatar } from 'antd'\nimport { UnlockOutlined, LockOutlined, StarOutlined, StarFilled } from '@ant-design/icons'\nimport moment from 'moment'\nimport { CHANGE_FAVORITE_REQUEST, LOAD_FAVORITED_REQUEST, LOAD_FAVORITE_NUMBER_REQUEST } from '../../../reducers/types'\n\nconst { Title } = Typography;\nfunction MessageHeader() {\n\n  const dispatch = useDispatch();\n  const { currentChatRoom, loadChatRoomsDone, loadChatRoomsLoading } = useSelector(state => state.chat)\n  const { favoriteNumber, isFavorited } = useSelector(state => state.favorite)\n\n  useEffect(() => {\n    if (!currentChatRoom?.private) {\n      const payload = { chatRoom: currentChatRoom._id }\n      dispatch({\n        type: LOAD_FAVORITED_REQUEST,\n        payload\n      })\n      dispatch({\n        type: LOAD_FAVORITE_NUMBER_REQUEST,\n        payload\n      })\n    }\n  }, [currentChatRoom])\n\n  const handleFavorite = useCallback(() => {\n    dispatch({\n      type: CHANGE_FAVORITE_REQUEST,\n      payload: {\n        chatRoom: currentChatRoom._id,\n      }\n    })\n  }, [currentChatRoom])\n\n  const rootDivStyle = useMemo(() => ({\n    width: '100%',\n    height: '100%',\n    padding: '1rem 2rem',\n    marginBottom: '1rem'\n  }), [])\n  const headerDivWrapperStyle = useMemo(() => ({ display: 'flex', justifyContent: 'space-between' }), [])\n  const titleWrapperStyle = useMemo(() => ({ display: 'flex', justifyContent: 'space-between', width: 'calc(100vw - 620px)' }), [])\n  const roomCreatedDivStyle = useMemo(() => ({ color: 'gray', fontSize: '0.7rem' }), [])\n  const roomStateIconStyle = useMemo(() => ({ marginTop: 20 }), [])\n  const roomCreatorCardStyle = useMemo(() => ({ width: '100%', border: 'none' }), [])\n  const avatarStyle = useMemo(() => ({ marginTop: -4, marginRight: -12 }), [])\n\n  return (\n    <div style={rootDivStyle}>\n      {loadChatRoomsDone && currentChatRoom?.title &&\n        <div style={headerDivWrapperStyle} >\n          <div>\n            <Title level={3} style={titleWrapperStyle}>\n              <div>\n                {currentChatRoom.createdAt\n                  ? <div style={roomCreatedDivStyle}>{` ${moment(currentChatRoom.createdAt).calendar()}  / 즐겨찾기 ${favoriteNumber}명`}</div>\n                  : <div style={roomCreatedDivStyle}>{`DIRECT MESSAGE  / 즐겨찾기 ${favoriteNumber}명`}</div>\n                }\n                {currentChatRoom.title}\n              </div>\n              <div>\n                <span onClick={handleFavorite}>\n                  {currentChatRoom.favorite === false\n                    ? <StarOutlined style={roomStateIconStyle} />\n                    : isFavorited\n                      ? <StarFilled style={roomStateIconStyle} />\n                      : <StarOutlined style={roomStateIconStyle} />\n                  }\n                </span>\n                {currentChatRoom.private\n                  ? <LockOutlined style={roomStateIconStyle} />\n                  : <UnlockOutlined style={roomStateIconStyle} />\n                }\n              </div>\n            </Title>\n            <p>{currentChatRoom.description}</p>\n          </div>\n          <div>\n            {currentChatRoom._id &&\n              <Card style={roomCreatorCardStyle}>\n                <Card.Meta\n                  avatar={<Avatar style={avatarStyle} src={currentChatRoom.writer.image} />}\n                  title={currentChatRoom.writer.name} />\n              </Card>\n            }\n          </div>\n        </div>\n      }\n    </div >)\n}\n\nexport default MessageHeader\n"]},"metadata":{},"sourceType":"module"}