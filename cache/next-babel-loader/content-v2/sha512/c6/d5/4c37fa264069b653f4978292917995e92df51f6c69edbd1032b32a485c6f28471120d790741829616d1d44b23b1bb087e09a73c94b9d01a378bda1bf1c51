{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/justinjeong/Github/javascript/githubIo/client/components/Chatting/MainPanel/Message.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Comment, Avatar, Skeleton, Empty } from 'antd';\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment';\nimport { LOAD_CHATS_REQUEST } from '../../../reducers/types';\n\nfunction Message() {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    currentUser\n  } = useSelector(state => state.user);\n  const {\n    chatList,\n    currentChatRoom,\n    loadChatsDone,\n    loadChatsLoading,\n    loadChatRoomsDone,\n    loadChatRoomsLoading\n  } = useSelector(state => state.chat);\n  useEffect(() => {\n    if (currentChatRoom) {\n      const payload = {};\n\n      if (currentChatRoom.private) {\n        payload.directRoom = currentChatRoom._id;\n      } else {\n        payload.chatRoom = currentChatRoom._id;\n      }\n\n      dispatch({\n        type: LOAD_CHATS_REQUEST,\n        payload\n      });\n    }\n  }, [dispatch, currentChatRoom]);\n  const timeFromNow = useCallback(timestamp => {\n    return moment(timestamp).fromNow();\n  }, []);\n  const isMessageMine = useCallback(message => {\n    if (!message || !currentUser) return false;\n    return message.writer._id === currentUser.userId;\n  }, [currentUser]);\n  const renderMessages = useCallback(() => chatList === null || chatList === void 0 ? void 0 : chatList.map(message => {\n    if (isMessageMine(message)) {\n      var _message$writer, _message$writer2, _message$writer3;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: 'auto',\n          padding: '16px 0',\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'end',\n              marginBottom: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: 12,\n                color: '#CCC',\n                marginRight: 8\n              },\n              children: timeFromNow(message.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: 12\n              },\n              children: (_message$writer = message.writer) === null || _message$writer === void 0 ? void 0 : _message$writer.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ant-comment-content-detail\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textAlign: 'end'\n              },\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            style: {\n              cursor: 'default',\n              margin: '3px 10px'\n            },\n            src: (_message$writer2 = message.writer) === null || _message$writer2 === void 0 ? void 0 : _message$writer2.image,\n            alt: (_message$writer3 = message.writer) === null || _message$writer3 === void 0 ? void 0 : _message$writer3.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, uuidv4(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this);\n    } else {\n      var _message$writer4, _message$writer5, _message$writer6;\n\n      return /*#__PURE__*/_jsxDEV(Comment, {\n        author: /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'black'\n          },\n          children: (_message$writer4 = message.writer) === null || _message$writer4 === void 0 ? void 0 : _message$writer4.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }, this),\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            cursor: 'default'\n          },\n          src: (_message$writer5 = message.writer) === null || _message$writer5 === void 0 ? void 0 : _message$writer5.image,\n          alt: (_message$writer6 = message.writer) === null || _message$writer6 === void 0 ? void 0 : _message$writer6.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }, this),\n        content: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 20\n        }, this),\n        datetime: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: timeFromNow(message.createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, uuidv4(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this);\n    }\n  }), [chatList]);\n  const renderSkeleton = useCallback(Array.from(Array(4)).map(_ => /*#__PURE__*/_jsxDEV(Skeleton, {\n    avatar: true\n  }, uuidv4(), false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 68\n  }, this)), []);\n  const emptyWrapperStyle = useMemo(() => ({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: 'calc(100vh - 500px)'\n  }), []);\n  const rootDivWrapperStyle = useMemo(() => ({\n    display: 'flex',\n    flexDirection: 'column'\n  }), []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: (chatList === null || chatList === void 0 ? void 0 : chatList.length) === 0 ? loadChatsLoading || loadChatRoomsLoading ? renderSkeleton : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: emptyWrapperStyle,\n      children: /*#__PURE__*/_jsxDEV(Empty, {\n        description: \"\\uB300\\uD654\\uAE30\\uB85D\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB9D0\\uC744 \\uAC78\\uC5B4\\uBCF4\\uC138\\uC694.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: rootDivWrapperStyle,\n      children: [(loadChatsLoading || loadChatRoomsLoading) && renderSkeleton, loadChatsDone && loadChatRoomsDone && renderMessages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Message, \"0bvq0bYYptauGGxGvOLLWDSJi5E=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Message;\nexport default Message;\n\nvar _c;\n\n$RefreshReg$(_c, \"Message\");","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/components/Chatting/MainPanel/Message.js"],"names":["React","useCallback","useEffect","useMemo","useDispatch","useSelector","Comment","Avatar","Skeleton","Empty","v4","uuidv4","moment","LOAD_CHATS_REQUEST","Message","dispatch","currentUser","state","user","chatList","currentChatRoom","loadChatsDone","loadChatsLoading","loadChatRoomsDone","loadChatRoomsLoading","chat","payload","private","directRoom","_id","chatRoom","type","timeFromNow","timestamp","fromNow","isMessageMine","message","writer","userId","renderMessages","map","marginLeft","padding","display","textAlign","marginBottom","fontSize","color","marginRight","createdAt","name","content","cursor","margin","image","renderSkeleton","Array","from","_","emptyWrapperStyle","justifyContent","alignItems","width","height","rootDivWrapperStyle","flexDirection","length"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAwCC,OAAxC,QAAuD,OAAvD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,QAA1B,EAAoCC,KAApC,QAAiD,MAAjD;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,kBAAT,QAAmC,yBAAnC;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAkBX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAnC;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,eAAZ;AAA6BC,IAAAA,aAA7B;AAA4CC,IAAAA,gBAA5C;AAA8DC,IAAAA,iBAA9D;AAAiFC,IAAAA;AAAjF,MAA0GnB,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACQ,IAAhB,CAA3H;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIkB,eAAJ,EAAqB;AACnB,YAAMM,OAAO,GAAG,EAAhB;;AACA,UAAIN,eAAe,CAACO,OAApB,EAA6B;AAC3BD,QAAAA,OAAO,CAACE,UAAR,GAAqBR,eAAe,CAACS,GAArC;AACD,OAFD,MAEO;AACLH,QAAAA,OAAO,CAACI,QAAR,GAAmBV,eAAe,CAACS,GAAnC;AACD;;AACDd,MAAAA,QAAQ,CAAC;AACPgB,QAAAA,IAAI,EAAElB,kBADC;AAEPa,QAAAA;AAFO,OAAD,CAAR;AAID;AACF,GAbQ,EAaN,CAACX,QAAD,EAAWK,eAAX,CAbM,CAAT;AAeA,QAAMY,WAAW,GAAG/B,WAAW,CAAEgC,SAAD,IAAe;AAC7C,WAAOrB,MAAM,CAACqB,SAAD,CAAN,CAAkBC,OAAlB,EAAP;AACD,GAF8B,EAE5B,EAF4B,CAA/B;AAIA,QAAMC,aAAa,GAAGlC,WAAW,CAAEmC,OAAD,IAAa;AAC7C,QAAI,CAACA,OAAD,IAAY,CAACpB,WAAjB,EAA8B,OAAO,KAAP;AAC9B,WAAOoB,OAAO,CAACC,MAAR,CAAeR,GAAf,KAAuBb,WAAW,CAACsB,MAA1C;AACD,GAHgC,EAG9B,CAACtB,WAAD,CAH8B,CAAjC;AAKA,QAAMuB,cAAc,GAAGtC,WAAW,CAAC,MAAMkB,QAAN,aAAMA,QAAN,uBAAMA,QAAQ,CAAEqB,GAAV,CAAcJ,OAAO,IAAI;AAChE,QAAID,aAAa,CAACC,OAAD,CAAjB,EAA4B;AAAA;;AAC1B,0BACE;AAAoB,QAAA,KAAK,EAAE;AAAEK,UAAAA,UAAU,EAAE,MAAd;AAAsBC,UAAAA,OAAO,EAAE,QAA/B;AAAyCC,UAAAA,OAAO,EAAE;AAAlD,SAA3B;AAAA,gCACE;AAAA,kCACE;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE,KAAb;AAAoBC,cAAAA,YAAY,EAAE;AAAlC,aAAZ;AAAA,oCACE;AAAM,cAAA,KAAK,EAAE;AAAEC,gBAAAA,QAAQ,EAAE,EAAZ;AAAgBC,gBAAAA,KAAK,EAAE,MAAvB;AAA+BC,gBAAAA,WAAW,EAAE;AAA5C,eAAb;AAAA,wBAA+DhB,WAAW,CAACI,OAAO,CAACa,SAAT;AAA1E;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,KAAK,EAAE;AAAEH,gBAAAA,QAAQ,EAAE;AAAZ,eAAb;AAAA,2CAAgCV,OAAO,CAACC,MAAxC,oDAAgC,gBAAgBa;AAAhD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,mCACE;AAAG,cAAA,KAAK,EAAE;AAAEN,gBAAAA,SAAS,EAAE;AAAb,eAAV;AAAA,wBAAiCR,OAAO,CAACe;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAE;AAAEC,cAAAA,MAAM,EAAE,SAAV;AAAqBC,cAAAA,MAAM,EAAE;AAA7B,aAAf;AAA0D,YAAA,GAAG,sBAAEjB,OAAO,CAACC,MAAV,qDAAE,iBAAgBiB,KAA/E;AAAsF,YAAA,GAAG,sBAAElB,OAAO,CAACC,MAAV,qDAAE,iBAAgBa;AAA3G;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA,SAAUvC,MAAM,EAAhB;AAAA;AAAA;AAAA;AAAA,cADF;AAgBD,KAjBD,MAiBO;AAAA;;AACL,0BACE,QAAC,OAAD;AAEE,QAAA,MAAM,eAAE;AAAM,UAAA,KAAK,EAAE;AAAEoC,YAAAA,KAAK,EAAE;AAAT,WAAb;AAAA,wCAAkCX,OAAO,CAACC,MAA1C,qDAAkC,iBAAgBa;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAFV;AAGE,QAAA,MAAM,eAAE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAEE,YAAAA,MAAM,EAAE;AAAV,WAAf;AAAsC,UAAA,GAAG,sBAAEhB,OAAO,CAACC,MAAV,qDAAE,iBAAgBiB,KAA3D;AAAkE,UAAA,GAAG,sBAAElB,OAAO,CAACC,MAAV,qDAAE,iBAAgBa;AAAvF;AAAA;AAAA;AAAA;AAAA,gBAHV;AAIE,QAAA,OAAO,eAAE;AAAA,oBAAId,OAAO,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAJX;AAKE,QAAA,QAAQ,eAAE;AAAA,oBAAOnB,WAAW,CAACI,OAAO,CAACa,SAAT;AAAlB;AAAA;AAAA;AAAA;AAAA;AALZ,SACOtC,MAAM,EADb;AAAA;AAAA;AAAA;AAAA,cADF;AASD;AACF,GA7BwC,CAAP,EA6B9B,CAACQ,QAAD,CA7B8B,CAAlC;AAgCA,QAAMoC,cAAc,GAAGtD,WAAW,CAACuD,KAAK,CAACC,IAAN,CAAWD,KAAK,CAAC,CAAD,CAAhB,EAAqBhB,GAArB,CAAyBkB,CAAC,iBAAI,QAAC,QAAD;AAAyB,IAAA,MAAM;AAA/B,KAAe/C,MAAM,EAArB;AAAA;AAAA;AAAA;AAAA,UAA9B,CAAD,EAAoE,EAApE,CAAlC;AACA,QAAMgD,iBAAiB,GAAGxD,OAAO,CAAC,OAAO;AAAEwC,IAAAA,OAAO,EAAE,MAAX;AAAmBiB,IAAAA,cAAc,EAAE,QAAnC;AAA6CC,IAAAA,UAAU,EAAE,QAAzD;AAAmEC,IAAAA,KAAK,EAAE,MAA1E;AAAkFC,IAAAA,MAAM,EAAE;AAA1F,GAAP,CAAD,EAA4H,EAA5H,CAAjC;AACA,QAAMC,mBAAmB,GAAG7D,OAAO,CAAC,OAAO;AAAEwC,IAAAA,OAAO,EAAE,MAAX;AAAmBsB,IAAAA,aAAa,EAAE;AAAlC,GAAP,CAAD,EAAuD,EAAvD,CAAnC;AAEA,sBAAQ;AAAA,cACL,CAAA9C,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAE+C,MAAV,MAAqB,CAArB,GACG5C,gBAAgB,IAAIE,oBAApB,GACE+B,cADF,gBAEE;AAAK,MAAA,KAAK,EAAEI,iBAAZ;AAAA,6BACA,QAAC,KAAD;AAAO,QAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAHL,gBAMG;AAAK,MAAA,KAAK,EAAEK,mBAAZ;AAAA,iBACC,CAAC1C,gBAAgB,IAAIE,oBAArB,KAA8C+B,cAD/C,EAEClC,aAAa,IAAIE,iBAAjB,IAAsCgB,cAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAPE,mBAAR;AAaD;;GA/EQzB,O;UAEUV,W,EACOC,W,EACwFA,W;;;KAJzGS,O;AAiFT,eAAeA,OAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Comment, Avatar, Skeleton, Empty } from 'antd'\nimport { v4 as uuidv4 } from 'uuid';\nimport moment from 'moment'\nimport { LOAD_CHATS_REQUEST } from '../../../reducers/types'\n\nfunction Message() {\n\n  const dispatch = useDispatch();\n  const { currentUser } = useSelector(state => state.user)\n  const { chatList, currentChatRoom, loadChatsDone, loadChatsLoading, loadChatRoomsDone, loadChatRoomsLoading } = useSelector(state => state.chat)\n\n  useEffect(() => {\n    if (currentChatRoom) {\n      const payload = {};\n      if (currentChatRoom.private) {\n        payload.directRoom = currentChatRoom._id;\n      } else {\n        payload.chatRoom = currentChatRoom._id;\n      }\n      dispatch({\n        type: LOAD_CHATS_REQUEST,\n        payload\n      })\n    }\n  }, [dispatch, currentChatRoom])\n\n  const timeFromNow = useCallback((timestamp) => {\n    return moment(timestamp).fromNow();\n  }, [])\n\n  const isMessageMine = useCallback((message) => {\n    if (!message || !currentUser) return false;\n    return message.writer._id === currentUser.userId\n  }, [currentUser])\n\n  const renderMessages = useCallback(() => chatList?.map(message => {\n    if (isMessageMine(message)) {\n      return (\n        <div key={uuidv4()} style={{ marginLeft: 'auto', padding: '16px 0', display: 'flex' }}>\n          <div >\n            <div style={{ textAlign: 'end', marginBottom: 4 }}>\n              <span style={{ fontSize: 12, color: '#CCC', marginRight: 8 }}>{timeFromNow(message.createdAt)}</span>\n              <span style={{ fontSize: 12 }}>{message.writer?.name}</span>\n            </div>\n            <div className=\"ant-comment-content-detail\">\n              <p style={{ textAlign: 'end' }}>{message.content}</p>\n            </div>\n          </div>\n          <div>\n            <Avatar style={{ cursor: 'default', margin: '3px 10px' }} src={message.writer?.image} alt={message.writer?.name} />\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <Comment\n          key={uuidv4()}\n          author={<span style={{ color: 'black' }}>{message.writer?.name}</span>}\n          avatar={<Avatar style={{ cursor: 'default' }} src={message.writer?.image} alt={message.writer?.name} />}\n          content={<p>{message.content}</p>}\n          datetime={<span>{timeFromNow(message.createdAt)}</span>}\n        />\n      )\n    }\n  }), [chatList])\n\n\n  const renderSkeleton = useCallback(Array.from(Array(4)).map(_ => <Skeleton key={uuidv4()} avatar />), [])\n  const emptyWrapperStyle = useMemo(() => ({ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: 'calc(100vh - 500px)' }), [])\n  const rootDivWrapperStyle = useMemo(() => ({ display: 'flex', flexDirection: 'column' }), [])\n\n  return (<>\n    {chatList?.length === 0\n      ? loadChatsLoading || loadChatRoomsLoading\n        ? renderSkeleton\n        : <div style={emptyWrapperStyle}>\n          <Empty description='대화기록이 없습니다. 말을 걸어보세요.' />\n        </div>\n      : <div style={rootDivWrapperStyle}>\n        {(loadChatsLoading || loadChatRoomsLoading) && renderSkeleton}\n        {loadChatsDone && loadChatRoomsDone && renderMessages}\n      </div>\n    }\n  </>)\n}\n\nexport default Message\n"]},"metadata":{},"sourceType":"module"}