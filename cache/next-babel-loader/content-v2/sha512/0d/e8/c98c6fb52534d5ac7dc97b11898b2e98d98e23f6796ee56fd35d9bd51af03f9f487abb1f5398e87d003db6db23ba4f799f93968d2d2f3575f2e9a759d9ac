{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  // console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const enhancer = false ? compose(applyMiddleware(sagaMiddleware)) : composeWithDevTools(applyMiddleware(sagaMiddleware, loggerMiddleware));\n  const store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/store/storeConfiguration.js"],"names":["createWrapper","applyMiddleware","compose","createStore","createSagaMiddleware","composeWithDevTools","rootReducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","configureStore","sagaMiddleware","enhancer","store","sagaTask","run","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACzE;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAG,MAAM;AAC3B,QAAMC,cAAc,GAAGV,oBAAoB,EAA3C;AACA,QAAMW,QAAQ,GAAG,QACbb,OAAO,CAACD,eAAe,CAACa,cAAD,CAAhB,CADM,GAEbT,mBAAmB,CAACJ,eAAe,CAACa,cAAD,EAAiBN,gBAAjB,CAAhB,CAFvB;AAGA,QAAMQ,KAAK,GAAGb,WAAW,CAACG,WAAD,EAAcS,QAAd,CAAzB;AACAC,EAAAA,KAAK,CAACC,QAAN,GAAiBH,cAAc,CAACI,GAAf,CAAmBX,QAAnB,CAAjB;AACA,SAAOS,KAAP;AACD,CARD;;AAUA,MAAMG,OAAO,GAAGnB,aAAa,CAACa,cAAD,EAAiB;AAC5CO,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf","sourcesContent":["import { createWrapper } from 'next-redux-wrapper'\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n  // console.log(action);\n  return next(action);\n};\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(sagaMiddleware))\n    : composeWithDevTools(applyMiddleware(sagaMiddleware, loggerMiddleware))\n  const store = createStore(rootReducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n}\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;\n"]},"metadata":{},"sourceType":"module"}