{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router, { useRouter } from 'next/router';\nimport { Form, Input, Button, Typography, message as Message, Space, Popover } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { EDIT_USER_REQUEST, CONFIRM_USER_REQUEST, UPLOAD_USER_IMAGE_REQUEST } from '../../reducers/types';\nconst {\n  Title\n} = Typography;\n\nfunction EditPage() {\n  const inputOpenImageRef = useRef();\n  const [form] = Form.useForm();\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const {\n    currentUser,\n    editUserLoading,\n    editUserDone,\n    editUserError,\n    message,\n    confirmUserLoading,\n    confirmUserDone,\n    confirmUserError\n  } = useSelector(state => state.user);\n  useEffect(() => {\n    form.setFieldsValue({\n      userName: currentUser === null || currentUser === void 0 ? void 0 : currentUser.name\n    });\n\n    if (editUserDone) {\n      Router.push('/');\n    }\n\n    if (editUserError || confirmUserError) {\n      Message.error({\n        content: message,\n        duration: 2\n      });\n    }\n  }, [currentUser, editUserDone, editUserError, confirmUserError, message, form]);\n  const handleEdit = useCallback(values => {\n    dispatch({\n      type: EDIT_USER_REQUEST,\n      payload: {\n        name: values.userName\n      }\n    });\n  }, []);\n  const handleConfirm = useCallback(values => {\n    dispatch({\n      type: CONFIRM_USER_REQUEST,\n      payload: {\n        password: values.password\n      }\n    });\n  }, []);\n\n  const handleImage = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    formData.append('file', file);\n    dispatch({\n      type: UPLOAD_USER_IMAGE_REQUEST,\n      payload: {\n        formData,\n        config\n      }\n    });\n  };\n\n  const handleClickRef = useCallback(() => {\n    inputOpenImageRef.current.click();\n  }, [inputOpenImageRef]);\n  const handleCancel = useCallback(() => {\n    router.back();\n  }, []);\n  const rootDivWrapperStyle = useMemo(() => ({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100%',\n    height: '100vh'\n  }), []);\n  const formLabelColStyle = useMemo(() => ({\n    span: 8\n  }), []);\n  const formWrapperColStyle = useMemo(() => ({\n    span: 16\n  }), []);\n  const formStyle = useMemo(() => ({\n    width: '400px'\n  }), []);\n  const titleStyle = useMemo(() => ({\n    display: 'flex',\n    justifyContent: 'center',\n    marginBottom: 40\n  }), []);\n  const formUserNameRules = useMemo(() => [{\n    required: true,\n    message: '이름을 입력해주세요.'\n  }, {\n    type: \"string\",\n    max: 20,\n    message: '이름은 20자 이내로 입력해주세요'\n  }], []);\n  const formPasswordRules = useMemo(() => [{\n    required: true,\n    message: '비밀번호를 입력해주세요.'\n  }, {\n    type: \"string\",\n    message: '비밀번호의 형식이 올바르지 않습니다.'\n  }, {\n    whitespace: false,\n    message: '비밀번호의 형식이 올바르지 않습니다.'\n  }, {\n    min: 6,\n    message: '비밀번호는 6글자보다 길어야합니다.'\n  }], []);\n  const formItemWrapperColStyle = useMemo(() => ({\n    offset: 8,\n    span: 16\n  }), []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    style: rootDivWrapperStyle,\n    children: /*#__PURE__*/_jsxs(Form, {\n      name: \"basic\",\n      form: form,\n      labelCol: formLabelColStyle,\n      wrapperCol: formWrapperColStyle,\n      style: formStyle,\n      onFinish: confirmUserDone ? handleEdit : handleConfirm,\n      children: [/*#__PURE__*/_jsx(Title, {\n        level: 2,\n        style: titleStyle,\n        children: \"\\uD68C\\uC6D0\\uC815\\uBCF4\\uC218\\uC815\"\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        label: \"\\uC774\\uBA54\\uC77C\",\n        children: /*#__PURE__*/_jsx(Popover, {\n          placement: \"right\",\n          content: \"\\uC774\\uBA54\\uC77C\\uC740 \\uBCC0\\uACBD\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\",\n          children: /*#__PURE__*/_jsx(\"span\", {\n            children: currentUser === null || currentUser === void 0 ? void 0 : currentUser.email\n          })\n        })\n      }), confirmUserDone || confirmUserError === false ? /*#__PURE__*/_jsx(Form.Item, {\n        label: \"\\uC774\\uB984\",\n        name: \"userName\",\n        rules: formUserNameRules,\n        children: /*#__PURE__*/_jsx(Input, {\n          prefix: /*#__PURE__*/_jsx(UserOutlined, {}),\n          placeholder: \"name\"\n        })\n      }) : /*#__PURE__*/_jsx(Form.Item, {\n        label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        name: \"password\",\n        rules: formPasswordRules,\n        children: /*#__PURE__*/_jsx(Input.Password, {\n          prefix: /*#__PURE__*/_jsx(LockOutlined, {}),\n          placeholder: \"password\"\n        })\n      }), /*#__PURE__*/_jsx(Form.Item, {\n        wrapperCol: formItemWrapperColStyle,\n        children: /*#__PURE__*/_jsxs(Space, {\n          children: [confirmUserDone || confirmUserError === false ? /*#__PURE__*/_jsxs(_Fragment, {\n            children: [/*#__PURE__*/_jsx(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              loading: editUserLoading,\n              disabled: editUserLoading,\n              children: \"\\uC218\\uC815\\uD558\\uAE30\"\n            }), /*#__PURE__*/_jsx(Button, {\n              loading: editUserLoading,\n              disabled: editUserLoading,\n              onClick: handleClickRef,\n              children: \"\\uC0AC\\uC9C4\\uBCC0\\uACBD\"\n            }), /*#__PURE__*/_jsx(\"input\", {\n              accept: \"image/jpeg, image/png\",\n              type: \"file\",\n              hidden: true,\n              ref: inputOpenImageRef,\n              onChange: handleImage\n            })]\n          }) : /*#__PURE__*/_jsx(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: confirmUserLoading,\n            disabled: confirmUserLoading,\n            children: \"\\uBCF8\\uC778 \\uD655\\uC778\"\n          }), /*#__PURE__*/_jsx(Button, {\n            onClick: handleCancel,\n            children: \"\\uCDE8\\uC18C\"\n          })]\n        })\n      })]\n    })\n  });\n}\n\nexport default EditPage;","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/components/User/EditPage.js"],"names":["React","useCallback","useEffect","useMemo","useRef","useDispatch","useSelector","Router","useRouter","Form","Input","Button","Typography","message","Message","Space","Popover","UserOutlined","LockOutlined","EDIT_USER_REQUEST","CONFIRM_USER_REQUEST","UPLOAD_USER_IMAGE_REQUEST","Title","EditPage","inputOpenImageRef","form","useForm","router","dispatch","currentUser","editUserLoading","editUserDone","editUserError","confirmUserLoading","confirmUserDone","confirmUserError","state","user","setFieldsValue","userName","name","push","error","content","duration","handleEdit","values","type","payload","handleConfirm","password","handleImage","event","file","target","files","formData","FormData","config","header","append","handleClickRef","current","click","handleCancel","back","rootDivWrapperStyle","display","justifyContent","alignItems","width","height","formLabelColStyle","span","formWrapperColStyle","formStyle","titleStyle","marginBottom","formUserNameRules","required","max","formPasswordRules","whitespace","min","formItemWrapperColStyle","offset","email"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useMemo, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Router, { useRouter } from 'next/router'\nimport { Form, Input, Button, Typography, message as Message, Space, Popover } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { EDIT_USER_REQUEST, CONFIRM_USER_REQUEST, UPLOAD_USER_IMAGE_REQUEST } from '../../reducers/types';\nconst { Title } = Typography;\n\nfunction EditPage() {\n\n  const inputOpenImageRef = useRef();\n  const [form] = Form.useForm();\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const { currentUser, editUserLoading, editUserDone, editUserError, message,\n    confirmUserLoading, confirmUserDone, confirmUserError } = useSelector(state => state.user)\n\n  useEffect(() => {\n    form.setFieldsValue({\n      userName: currentUser?.name,\n    });\n    if (editUserDone) {\n      Router.push('/')\n    }\n    if (editUserError || confirmUserError) {\n      Message.error({ content: message, duration: 2 });\n    }\n  }, [currentUser, editUserDone, editUserError, confirmUserError, message, form])\n\n  const handleEdit = useCallback((values) => {\n    dispatch({\n      type: EDIT_USER_REQUEST,\n      payload: {\n        name: values.userName,\n      }\n    })\n  }, []);\n\n  const handleConfirm = useCallback((values) => {\n    dispatch({\n      type: CONFIRM_USER_REQUEST,\n      payload: {\n        password: values.password,\n      }\n    })\n  }, []);\n\n  const handleImage = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const formData = new FormData();\n\n    const config = {\n      header: { 'content-type': 'multipart/form-data' }\n    }\n    formData.append('file', file)\n\n    dispatch({\n      type: UPLOAD_USER_IMAGE_REQUEST,\n      payload: {\n        formData,\n        config,\n      }\n    })\n  }\n\n  const handleClickRef = useCallback(() => {\n    inputOpenImageRef.current.click()\n  }, [inputOpenImageRef])\n\n  const handleCancel = useCallback(() => {\n    router.back()\n  }, [])\n\n  const rootDivWrapperStyle = useMemo(() => ({ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100%', height: '100vh' }), [])\n  const formLabelColStyle = useMemo(() => ({ span: 8 }), [])\n  const formWrapperColStyle = useMemo(() => ({ span: 16 }), [])\n  const formStyle = useMemo(() => ({ width: '400px' }), [])\n  const titleStyle = useMemo(() => ({ display: 'flex', justifyContent: 'center', marginBottom: 40 }), [])\n  const formUserNameRules = useMemo(() => ([\n    { required: true, message: '이름을 입력해주세요.' },\n    { type: \"string\", max: 20, message: '이름은 20자 이내로 입력해주세요' }\n  ]), [])\n  const formPasswordRules = useMemo(() => ([\n    { required: true, message: '비밀번호를 입력해주세요.' },\n    { type: \"string\", message: '비밀번호의 형식이 올바르지 않습니다.' },\n    { whitespace: false, message: '비밀번호의 형식이 올바르지 않습니다.' },\n    { min: 6, message: '비밀번호는 6글자보다 길어야합니다.' }\n  ]), [])\n  const formItemWrapperColStyle = useMemo(() => ({ offset: 8, span: 16 }), [])\n\n\n  return (\n    <div style={rootDivWrapperStyle}>\n      <Form\n        name=\"basic\"\n        form={form}\n        labelCol={formLabelColStyle}\n        wrapperCol={formWrapperColStyle}\n        style={formStyle}\n        onFinish={confirmUserDone ? handleEdit : handleConfirm}\n      >\n        <Title level={2} style={titleStyle} >회원정보수정</Title>\n\n        <Form.Item label=\"이메일\">\n          <Popover placement=\"right\" content='이메일은 변경할 수 없습니다.'>\n            <span>{currentUser?.email}</span>\n          </Popover>\n        </Form.Item>\n        {(confirmUserDone || confirmUserError === false)\n          ? <Form.Item\n            label=\"이름\"\n            name=\"userName\"\n            rules={formUserNameRules}\n          >\n            <Input prefix={<UserOutlined />} placeholder=\"name\" />\n          </Form.Item>\n          : <Form.Item\n            label=\"비밀번호\"\n            name=\"password\"\n            rules={formPasswordRules}\n          >\n            <Input.Password prefix={<LockOutlined />} placeholder=\"password\" />\n          </Form.Item>}\n\n        <Form.Item wrapperCol={formItemWrapperColStyle}>\n          <Space>\n            {(confirmUserDone || confirmUserError === false)\n              ? <>\n                <Button type=\"primary\" htmlType=\"submit\" loading={editUserLoading} disabled={editUserLoading}>\n                  수정하기\n                </Button>\n                <Button loading={editUserLoading} disabled={editUserLoading} onClick={handleClickRef}>\n                  사진변경\n                </Button>\n                <input accept='image/jpeg, image/png' type=\"file\" hidden ref={inputOpenImageRef} onChange={handleImage} />\n              </>\n              : <Button type=\"primary\" htmlType=\"submit\" loading={confirmUserLoading} disabled={confirmUserLoading}>\n                본인 확인\n                </Button>}\n            <Button onClick={handleCancel} >\n              취소\n            </Button>\n          </Space>\n        </Form.Item>\n      </Form>\n    </div >\n  )\n}\n\nexport default EditPage;"]},"metadata":{},"sourceType":"module"}