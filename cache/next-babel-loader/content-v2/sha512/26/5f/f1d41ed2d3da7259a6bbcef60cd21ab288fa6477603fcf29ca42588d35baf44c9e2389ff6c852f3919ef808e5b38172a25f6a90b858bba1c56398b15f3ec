{"ast":null,"code":"import { all, fork, put, call, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { POST_COMMENT_REQUEST, POST_COMMENT_SUCCESS, POST_COMMENT_FAILURE, LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_COMMENTS_FAILURE } from '../reducers/types';\n\nfunction saveCommentAPI(data) {\n  return axios.post('/api/comment/save', data);\n}\n\nfunction* saveComment(action) {\n  try {\n    const result = yield call(saveCommentAPI, action.payload);\n    yield put({\n      type: POST_COMMENT_SUCCESS,\n      payload: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: POST_COMMENT_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction loadCommentsAPI(data) {\n  return axios.post('/api/comment/comments', data);\n}\n\nfunction* loadComments(action) {\n  try {\n    const result = yield call(loadCommentsAPI, action.payload);\n    yield put({\n      type: LOAD_COMMENTS_SUCCESS,\n      payload: result.data\n    });\n  } catch (error) {\n    console.error(error);\n    yield put({\n      type: LOAD_COMMENTS_FAILURE,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchSaveComment() {\n  yield takeLatest(POST_COMMENT_REQUEST, saveComment);\n}\n\nfunction* watchLoadComments() {\n  yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments);\n}\n\nexport default function* commentSaga() {\n  yield all([fork(watchSaveComment), fork(watchLoadComments)]);\n}","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/sagas/comment.js"],"names":["all","fork","put","call","takeLatest","axios","POST_COMMENT_REQUEST","POST_COMMENT_SUCCESS","POST_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","saveCommentAPI","data","post","saveComment","action","result","payload","type","error","console","response","loadCommentsAPI","loadComments","watchSaveComment","watchLoadComments","commentSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,oBAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACEC,oBADF,EACwBC,oBADxB,EAC8CC,oBAD9C,EAEEC,qBAFF,EAEyBC,qBAFzB,EAEgDC,qBAFhD,QAGO,mBAHP;;AAKA,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,SAAOR,KAAK,CAACS,IAAN,CAAW,mBAAX,EAAgCD,IAAhC,CAAP;AACD;;AAED,UAAUE,WAAV,CAAsBC,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMd,IAAI,CAACS,cAAD,EAAiBI,MAAM,CAACE,OAAxB,CAAzB;AACA,UAAMhB,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAEZ,oBADE;AAERW,MAAAA,OAAO,EAAED,MAAM,CAACJ;AAFR,KAAD,CAAT;AAID,GAND,CAME,OAAOO,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMlB,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAEX,oBADE;AAERY,MAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN,CAAeT;AAFd,KAAD,CAAT;AAID;AACF;;AAED,SAASU,eAAT,CAAyBV,IAAzB,EAA+B;AAC7B,SAAOR,KAAK,CAACS,IAAN,CAAW,uBAAX,EAAoCD,IAApC,CAAP;AACD;;AAED,UAAUW,YAAV,CAAuBR,MAAvB,EAA+B;AAC7B,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMd,IAAI,CAACoB,eAAD,EAAkBP,MAAM,CAACE,OAAzB,CAAzB;AACA,UAAMhB,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAET,qBADE;AAERQ,MAAAA,OAAO,EAAED,MAAM,CAACJ;AAFR,KAAD,CAAT;AAID,GAND,CAME,OAAOO,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACA,UAAMlB,GAAG,CAAC;AACRiB,MAAAA,IAAI,EAAER,qBADE;AAERS,MAAAA,KAAK,EAAEA,KAAK,CAACE,QAAN,CAAeT;AAFd,KAAD,CAAT;AAID;AACF;;AAED,UAAUY,gBAAV,GAA6B;AAC3B,QAAMrB,UAAU,CAACE,oBAAD,EAAuBS,WAAvB,CAAhB;AACD;;AAED,UAAUW,iBAAV,GAA8B;AAC5B,QAAMtB,UAAU,CAACK,qBAAD,EAAwBe,YAAxB,CAAhB;AACD;;AAGD,eAAe,UAAUG,WAAV,GAAwB;AACrC,QAAM3B,GAAG,CAAC,CACRC,IAAI,CAACwB,gBAAD,CADI,EAERxB,IAAI,CAACyB,iBAAD,CAFI,CAAD,CAAT;AAID","sourcesContent":["import { all, fork, put, call, takeLatest } from 'redux-saga/effects'\nimport axios from 'axios';\n\nimport {\n  POST_COMMENT_REQUEST, POST_COMMENT_SUCCESS, POST_COMMENT_FAILURE,\n  LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_COMMENTS_FAILURE,\n} from '../reducers/types'\n\nfunction saveCommentAPI(data) {\n  return axios.post('/api/comment/save', data)\n}\n\nfunction* saveComment(action) {\n  try {\n    const result = yield call(saveCommentAPI, action.payload);\n    yield put({\n      type: POST_COMMENT_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: POST_COMMENT_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction loadCommentsAPI(data) {\n  return axios.post('/api/comment/comments', data)\n}\n\nfunction* loadComments(action) {\n  try {\n    const result = yield call(loadCommentsAPI, action.payload);\n    yield put({\n      type: LOAD_COMMENTS_SUCCESS,\n      payload: result.data,\n    })\n  } catch (error) {\n    console.error(error)\n    yield put({\n      type: LOAD_COMMENTS_FAILURE,\n      error: error.response.data,\n    })\n  }\n}\n\nfunction* watchSaveComment() {\n  yield takeLatest(POST_COMMENT_REQUEST, saveComment)\n}\n\nfunction* watchLoadComments() {\n  yield takeLatest(LOAD_COMMENTS_REQUEST, loadComments)\n}\n\n\nexport default function* commentSaga() {\n  yield all([\n    fork(watchSaveComment),\n    fork(watchLoadComments),\n  ])\n}"]},"metadata":{},"sourceType":"module"}