{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/get\";\nimport _inherits from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"/Users/justinjeong/Github/javascript/githubIo/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { message as Message } from 'antd';\nimport { FileImageOutlined, FileAddOutlined, VideoCameraAddOutlined } from '@ant-design/icons';\nimport { UPLOAD_BLOG_DATASET_REQUEST, RESET_UPLOAD_BLOG_DATASET } from '../../../reducers/types';\nvar ReactQuill = true ? require('react-quill') : function () {\n  return false;\n};\nvar Quill = ReactQuill.Quill; // const __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\n\nif (Quill) {\n  var QuillClipboard = Quill.import('modules/clipboard');\n\n  var Clipboard = /*#__PURE__*/function (_QuillClipboard) {\n    _inherits(Clipboard, _QuillClipboard);\n\n    var _super = _createSuper(Clipboard);\n\n    function Clipboard() {\n      var _this;\n\n      _classCallCheck(this, Clipboard);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"getMetaTagElements\", function (stringContent) {\n        var el = document.createElement('div');\n        el.innerHTML = stringContent;\n        return el.getElementsByTagName('meta');\n      });\n\n      return _this;\n    }\n\n    _createClass(Clipboard, [{\n      key: \"onPaste\",\n      value: function () {\n        var _onPaste = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n          var _this2 = this;\n\n          var clipboardData, pastedData, urlMatches;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  clipboardData = e.clipboardData || window.clipboardData;\n                  _context.next = 3;\n                  return clipboardData.getData('Text');\n\n                case 3:\n                  pastedData = _context.sent;\n                  urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n\n                  if (urlMatches.length > 0) {\n                    e.preventDefault();\n                    urlMatches.forEach(function (link) {\n                      axios.get(link).then(function (payload) {\n                        // let title, image, url, description;\n                        var title, image, url;\n\n                        var _iterator = _createForOfIteratorHelper(_this2.getMetaTagElements(payload)),\n                            _step;\n\n                        try {\n                          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                            var node = _step.value;\n\n                            if (node.getAttribute(\"property\") === \"og:title\") {\n                              title = node.getAttribute(\"content\");\n                            }\n\n                            if (node.getAttribute(\"property\") === \"og:image\") {\n                              image = node.getAttribute(\"content\");\n                            }\n\n                            if (node.getAttribute(\"property\") === \"og:url\") {\n                              url = node.getAttribute(\"content\");\n                            } // if (node.getAttribute(\"property\") === \"og:description\") {\n                            //     description = node.getAttribute(\"content\");\n                            // }\n\n                          }\n                        } catch (err) {\n                          _iterator.e(err);\n                        } finally {\n                          _iterator.f();\n                        }\n\n                        var rendered = \"<a href=\".concat(url, \" target=\\\"_blank\\\"><div><img src=\").concat(image, \" alt=\").concat(title, \" width=\\\"20%\\\"/><span>\").concat(title, \"</span></div></a>\");\n\n                        var range = _this2.quill.getSelection();\n\n                        var position = range ? range.index : 0;\n\n                        _this2.quill.pasteHTML(position, rendered, 'silent');\n\n                        _this2.quill.setSelection(position + rendered.length);\n                      }).catch(function (error) {\n                        return console.error(error);\n                      });\n                    });\n                  } else {\n                    //console.log('when to use this') 보통 다른 곳에서  paste 한다음에  copy하면 이쪽 걸로 한다. \n                    _get(_getPrototypeOf(Clipboard.prototype), \"onPaste\", this).call(this, e);\n                  }\n\n                case 6:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function onPaste(_x) {\n          return _onPaste.apply(this, arguments);\n        }\n\n        return onPaste;\n      }()\n    }]);\n\n    return Clipboard;\n  }(QuillClipboard);\n\n  Quill.register('modules/clipboard', Clipboard, true);\n  var BlockEmbed = Quill.import('blots/block/embed');\n\n  var ImageBlot = /*#__PURE__*/function (_BlockEmbed) {\n    _inherits(ImageBlot, _BlockEmbed);\n\n    var _super2 = _createSuper(ImageBlot);\n\n    function ImageBlot() {\n      _classCallCheck(this, ImageBlot);\n\n      return _super2.apply(this, arguments);\n    }\n\n    _createClass(ImageBlot, null, [{\n      key: \"create\",\n      value: function create(value) {\n        var imgTag = _get(_getPrototypeOf(ImageBlot), \"create\", this).call(this);\n\n        imgTag.setAttribute('src', value.src);\n        imgTag.setAttribute('alt', value.title);\n        imgTag.setAttribute('style', 'width: 70%; max-width: 400px;');\n        return imgTag;\n      }\n    }, {\n      key: \"value\",\n      value: function value(node) {\n        return {\n          src: node.getAttribute('src'),\n          title: node.getAttribute('alt')\n        };\n      }\n    }]);\n\n    return ImageBlot;\n  }(BlockEmbed);\n\n  ImageBlot.blotName = 'image';\n  ImageBlot.tagName = 'img';\n  Quill.register(ImageBlot);\n\n  var VideoBlot = /*#__PURE__*/function (_BlockEmbed2) {\n    _inherits(VideoBlot, _BlockEmbed2);\n\n    var _super3 = _createSuper(VideoBlot);\n\n    function VideoBlot() {\n      _classCallCheck(this, VideoBlot);\n\n      return _super3.apply(this, arguments);\n    }\n\n    _createClass(VideoBlot, null, [{\n      key: \"create\",\n      value: function create(value) {\n        if (value && value.src) {\n          var videoTag = _get(_getPrototypeOf(VideoBlot), \"create\", this).call(this);\n\n          videoTag.setAttribute('src', value.src);\n          videoTag.setAttribute('title', value.title);\n          videoTag.setAttribute('style', 'width: 70%; max-width: 400px;');\n          videoTag.setAttribute('controls', '');\n          return videoTag;\n        } else {\n          var iframeTag = document.createElement('iframe');\n          iframeTag.setAttribute('src', value);\n          iframeTag.setAttribute('frameborder', '0');\n          iframeTag.setAttribute('allowfullscreen', true);\n          iframeTag.setAttribute('style', 'width: 70%; max-width: 400px;');\n          return iframeTag;\n        }\n      }\n    }, {\n      key: \"value\",\n      value: function value(node) {\n        if (node.getAttribute('title')) {\n          return {\n            src: node.getAttribute('src'),\n            title: node.getAttribute('title')\n          };\n        } else {\n          return node.getAttribute('src');\n        }\n      }\n    }]);\n\n    return VideoBlot;\n  }(BlockEmbed);\n\n  VideoBlot.blotName = 'video';\n  VideoBlot.tagName = 'video';\n  Quill.register(VideoBlot);\n\n  var FileBlot = /*#__PURE__*/function (_BlockEmbed3) {\n    _inherits(FileBlot, _BlockEmbed3);\n\n    var _super4 = _createSuper(FileBlot);\n\n    function FileBlot() {\n      _classCallCheck(this, FileBlot);\n\n      return _super4.apply(this, arguments);\n    }\n\n    _createClass(FileBlot, null, [{\n      key: \"create\",\n      value: function create(value) {\n        var prefixTag = document.createElement('span');\n        prefixTag.innerText = \"첨부파일 - \";\n        var bTag = document.createElement('b'); //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\n\n        bTag.innerText = value.title;\n        var linkTag = document.createElement('a');\n        linkTag.setAttribute('href', value.src);\n        linkTag.setAttribute(\"target\", \"_blank\");\n        linkTag.setAttribute(\"className\", \"file-link-inner-post\");\n        linkTag.appendChild(bTag); //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\n\n        var node = _get(_getPrototypeOf(FileBlot), \"create\", this).call(this);\n\n        node.appendChild(prefixTag);\n        node.appendChild(linkTag);\n        return node;\n      }\n    }, {\n      key: \"value\",\n      value: function value(node) {\n        return {\n          src: node.querySelector('a').getAttribute('href'),\n          title: node.querySelector('b').innerText\n        };\n      }\n    }]);\n\n    return FileBlot;\n  }(BlockEmbed);\n\n  FileBlot.blotName = 'file';\n  FileBlot.tagName = 'p';\n  FileBlot.className = 'file-inner-post';\n  Quill.register(FileBlot);\n\n  var PollBlot = /*#__PURE__*/function (_BlockEmbed4) {\n    _inherits(PollBlot, _BlockEmbed4);\n\n    var _super5 = _createSuper(PollBlot);\n\n    function PollBlot() {\n      _classCallCheck(this, PollBlot);\n\n      return _super5.apply(this, arguments);\n    }\n\n    _createClass(PollBlot, null, [{\n      key: \"create\",\n      value: function create(value) {\n        var prefixTag = document.createElement('span');\n        prefixTag.innerText = \"투표 - \";\n        var bTag = document.createElement('b');\n        bTag.innerText = value.title;\n\n        var node = _get(_getPrototypeOf(PollBlot), \"create\", this).call(this);\n\n        node.setAttribute('id', value.id);\n        node.appendChild(prefixTag);\n        node.appendChild(bTag);\n        return node;\n      }\n    }, {\n      key: \"value\",\n      value: function value(node) {\n        var id = node.getAttribute('id');\n        var bTag = node.querySelector('b');\n        var title = bTag.innerText;\n        return {\n          id: id,\n          title: title\n        };\n      }\n    }]);\n\n    return PollBlot;\n  }(BlockEmbed);\n\n  PollBlot.blotName = 'poll';\n  PollBlot.tagName = 'p';\n  PollBlot.className = 'poll-inner-post';\n  Quill.register(PollBlot);\n}\n\nvar QuillEditor = /*#__PURE__*/function (_React$Component) {\n  _inherits(QuillEditor, _React$Component);\n\n  var _super6 = _createSuper(QuillEditor);\n\n  function QuillEditor(props) {\n    var _this3;\n\n    _classCallCheck(this, QuillEditor);\n\n    _this3 = _super6.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this3), \"bandId\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"placeholder\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"onEditorChange\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"onFilesChange\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"onPollsChange\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this3), \"handleChange\", function (html) {\n      // console.log('html', html)\n      // https://youtu.be/BbR-QCoKngE\n      // https://www.youtube.com/embed/ZwKhufmMxko\n      // https://tv.naver.com/v/9176888\n      // renderToStaticMarkup(ReactHtmlParser(html, options));\n      _this3.setState({\n        editorHtml: html\n      }, function () {\n        _this3.props.onEditorChange(_this3.state.editorHtml);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"imageHandler\", function () {\n      _this3.inputOpenImageRef.current.click();\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"videoHandler\", function () {\n      _this3.inputOpenVideoRef.current.click();\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"fileHandler\", function () {\n      _this3.inputOpenFileRef.current.click();\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"insertImage\", function (e) {\n      var _e$currentTarget$file;\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (e.currentTarget && ((_e$currentTarget$file = e.currentTarget.files) === null || _e$currentTarget$file === void 0 ? void 0 : _e$currentTarget$file.length) > 0) {\n        var file = e.currentTarget.files[0];\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        var config = {\n          header: {\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n\n        _this3.props.dispatchDataset({\n          formData: formData,\n          config: config,\n          dataType: 'image',\n          file: file\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"insertVideo\", function (e) {\n      var _e$currentTarget$file2;\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (e.currentTarget && ((_e$currentTarget$file2 = e.currentTarget.files) === null || _e$currentTarget$file2 === void 0 ? void 0 : _e$currentTarget$file2.length) > 0) {\n        var file = e.currentTarget.files[0];\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        var config = {\n          header: {\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n\n        _this3.props.dispatchDataset({\n          formData: formData,\n          config: config,\n          dataType: 'video',\n          file: file\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"insertFile\", function (e) {\n      var _e$currentTarget$file3;\n\n      e.stopPropagation();\n      e.preventDefault();\n\n      if (e.currentTarget && ((_e$currentTarget$file3 = e.currentTarget.files) === null || _e$currentTarget$file3 === void 0 ? void 0 : _e$currentTarget$file3.length) > 0) {\n        var file = e.currentTarget.files[0];\n        var formData = new FormData();\n        formData.append(\"file\", file);\n        var config = {\n          header: {\n            'Content-Type': 'multipart/form-data'\n          }\n        };\n\n        _this3.props.dispatchDataset({\n          formData: formData,\n          config: config,\n          dataType: 'file',\n          file: file\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"modules\", {\n      // syntax: true,\n      toolbar: {\n        container: \"#toolbar\",\n        //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다. \n        handlers: {\n          insertImage: _this3.imageHandler,\n          insertVideo: _this3.videoHandler,\n          insertFile: _this3.fileHandler,\n          insertPoll: _this3.pollHandler\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this3), \"formats\", ['header', 'bold', 'italic', 'underline', 'strike', 'image', 'video', 'file', 'link', \"code-block\", \"video\", \"blockquote\", \"clean\"]);\n\n    _this3.state = {\n      editorHtml: \"<p>&nbsp;</p>\"\n    };\n    _this3.reactQuillRef = null;\n    _this3.inputOpenImageRef = /*#__PURE__*/React.createRef();\n    _this3.inputOpenVideoRef = /*#__PURE__*/React.createRef();\n    _this3.inputOpenFileRef = /*#__PURE__*/React.createRef();\n    return _this3;\n  }\n\n  _createClass(QuillEditor, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      if (this.props.blog.uploadBlogDatasetError) {\n        Message.error('파일을 업로드 하는 과정에서 문제가 발생했습니다.');\n      }\n\n      if (this.props.blog.uploadBlogDatasetDone) {\n        var quill = this.reactQuillRef.getEditor();\n        quill.focus();\n        var range = quill.getSelection();\n        var position = range ? range.index : 0;\n        quill.insertEmbed(position, this.props.blog.uploadDataset.dataType, {\n          src: this.props.blog.uploadDataset.url,\n          title: this.props.blog.uploadDataset.fileName\n        });\n        quill.setSelection(position + 1);\n        this.props.dispatchResetDataset();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/_jsxs(\"div\", {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          id: \"toolbar\",\n          children: [/*#__PURE__*/_jsxs(\"select\", {\n            className: \"ql-header\",\n            defaultValue: \"\",\n            onChange: function onChange(e) {\n              return e.persist();\n            },\n            children: [/*#__PURE__*/_jsx(\"option\", {\n              value: \"1\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"2\"\n            }), /*#__PURE__*/_jsx(\"option\", {\n              value: \"\"\n            })]\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-bold\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-italic\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-underline\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-strike\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-insertImage\",\n            children: /*#__PURE__*/_jsx(FileImageOutlined, {})\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-insertVideo\",\n            children: /*#__PURE__*/_jsx(VideoCameraAddOutlined, {})\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-insertFile\",\n            children: /*#__PURE__*/_jsx(FileAddOutlined, {})\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-link\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-code-block\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-video\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-blockquote\"\n          }), /*#__PURE__*/_jsx(\"button\", {\n            className: \"ql-clean\"\n          })]\n        }), /*#__PURE__*/_jsx(ReactQuill, {\n          ref: function ref(el) {\n            _this4.reactQuillRef = el;\n          },\n          theme: 'snow',\n          onChange: this.handleChange,\n          modules: this.modules,\n          formats: this.formats,\n          value: this.state.editorHtml,\n          placeholder: this.props.placeholder,\n          style: {\n            height: 'calc(100vh - 358px)',\n            overflowY: 'hidden'\n          }\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          ref: this.inputOpenImageRef,\n          hidden: true,\n          onChange: this.insertImage\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"file\",\n          accept: \"video/*\",\n          ref: this.inputOpenVideoRef,\n          hidden: true,\n          onChange: this.insertVideo\n        }), /*#__PURE__*/_jsx(\"input\", {\n          type: \"file\",\n          accept: \"*\",\n          ref: this.inputOpenFileRef,\n          hidden: true,\n          onChange: this.insertFile\n        })]\n      });\n    }\n  }]);\n\n  return QuillEditor;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    blog: state.blog\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    dispatchDataset: function dispatchDataset(payload) {\n      return dispatch({\n        type: UPLOAD_BLOG_DATASET_REQUEST,\n        payload: payload\n      });\n    },\n    dispatchResetDataset: function dispatchResetDataset() {\n      return dispatch({\n        type: RESET_UPLOAD_BLOG_DATASET\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuillEditor);","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/components/Blog/Editor/QuillEditor.js"],"names":["React","connect","axios","message","Message","FileImageOutlined","FileAddOutlined","VideoCameraAddOutlined","UPLOAD_BLOG_DATASET_REQUEST","RESET_UPLOAD_BLOG_DATASET","ReactQuill","require","Quill","QuillClipboard","import","Clipboard","stringContent","el","document","createElement","innerHTML","getElementsByTagName","e","clipboardData","window","getData","pastedData","urlMatches","match","length","preventDefault","forEach","link","get","then","payload","title","image","url","getMetaTagElements","node","getAttribute","rendered","range","quill","getSelection","position","index","pasteHTML","setSelection","catch","error","console","register","BlockEmbed","ImageBlot","value","imgTag","setAttribute","src","blotName","tagName","VideoBlot","videoTag","iframeTag","FileBlot","prefixTag","innerText","bTag","linkTag","appendChild","querySelector","className","PollBlot","id","QuillEditor","props","html","setState","editorHtml","onEditorChange","state","inputOpenImageRef","current","click","inputOpenVideoRef","inputOpenFileRef","stopPropagation","currentTarget","files","file","formData","FormData","append","config","header","dispatchDataset","dataType","toolbar","container","handlers","insertImage","imageHandler","insertVideo","videoHandler","insertFile","fileHandler","insertPoll","pollHandler","reactQuillRef","createRef","blog","uploadBlogDatasetError","uploadBlogDatasetDone","getEditor","focus","insertEmbed","uploadDataset","fileName","dispatchResetDataset","persist","handleChange","modules","formats","placeholder","height","overflowY","Component","mapStateToProps","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux'\nimport axios from 'axios';\nimport { message as Message } from 'antd'\nimport { FileImageOutlined, FileAddOutlined, VideoCameraAddOutlined } from '@ant-design/icons'\nimport { UPLOAD_BLOG_DATASET_REQUEST, RESET_UPLOAD_BLOG_DATASET } from '../../../reducers/types'\n\nconst ReactQuill = typeof window === 'object' ? require('react-quill') : () => false;\nconst { Quill } = ReactQuill;\n\n// const __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\n\nif (Quill) {\n  const QuillClipboard = Quill.import('modules/clipboard');\n\n  class Clipboard extends QuillClipboard {\n\n    getMetaTagElements = (stringContent) => {\n      const el = document.createElement('div');\n      el.innerHTML = stringContent;\n      return el.getElementsByTagName('meta');\n    };\n\n    async onPaste(e) {\n      let clipboardData = e.clipboardData || window.clipboardData;\n      let pastedData = await clipboardData.getData('Text');\n\n      const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\n      if (urlMatches.length > 0) {\n        e.preventDefault();\n        urlMatches.forEach(link => {\n          axios.get(link)\n            .then(payload => {\n              // let title, image, url, description;\n              let title, image, url;\n              for (let node of this.getMetaTagElements(payload)) {\n                if (node.getAttribute(\"property\") === \"og:title\") {\n                  title = node.getAttribute(\"content\");\n                }\n                if (node.getAttribute(\"property\") === \"og:image\") {\n                  image = node.getAttribute(\"content\");\n                }\n                if (node.getAttribute(\"property\") === \"og:url\") {\n                  url = node.getAttribute(\"content\");\n                }\n                // if (node.getAttribute(\"property\") === \"og:description\") {\n                //     description = node.getAttribute(\"content\");\n                // }\n              }\n\n              const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\n\n              let range = this.quill.getSelection();\n              let position = range ? range.index : 0;\n              this.quill.pasteHTML(position, rendered, 'silent');\n              this.quill.setSelection(position + rendered.length);\n            })\n            .catch(error => console.error(error));\n        });\n\n      } else {\n        //console.log('when to use this') 보통 다른 곳에서  paste 한다음에  copy하면 이쪽 걸로 한다. \n        super.onPaste(e);\n      }\n    }\n\n  }\n  Quill.register('modules/clipboard', Clipboard, true);\n\n  const BlockEmbed = Quill.import('blots/block/embed');\n\n  class ImageBlot extends BlockEmbed {\n\n    static create(value) {\n      const imgTag = super.create();\n      imgTag.setAttribute('src', value.src);\n      imgTag.setAttribute('alt', value.title);\n      imgTag.setAttribute('style', 'width: 70%; max-width: 400px;');\n      return imgTag;\n    }\n\n    static value(node) {\n      return { src: node.getAttribute('src'), title: node.getAttribute('alt') };\n    }\n\n  }\n\n  ImageBlot.blotName = 'image';\n  ImageBlot.tagName = 'img';\n  Quill.register(ImageBlot);\n\n  class VideoBlot extends BlockEmbed {\n\n    static create(value) {\n      if (value && value.src) {\n        const videoTag = super.create();\n        videoTag.setAttribute('src', value.src);\n        videoTag.setAttribute('title', value.title);\n        videoTag.setAttribute('style', 'width: 70%; max-width: 400px;');\n        videoTag.setAttribute('controls', '');\n\n        return videoTag;\n      } else {\n        const iframeTag = document.createElement('iframe');\n        iframeTag.setAttribute('src', value);\n        iframeTag.setAttribute('frameborder', '0');\n        iframeTag.setAttribute('allowfullscreen', true);\n        iframeTag.setAttribute('style', 'width: 70%; max-width: 400px;');\n        return iframeTag;\n      }\n    }\n\n    static value(node) {\n      if (node.getAttribute('title')) {\n        return { src: node.getAttribute('src'), title: node.getAttribute('title') };\n      } else {\n        return node.getAttribute('src');\n      }\n    }\n\n  }\n\n  VideoBlot.blotName = 'video';\n  VideoBlot.tagName = 'video';\n  Quill.register(VideoBlot);\n\n  class FileBlot extends BlockEmbed {\n\n    static create(value) {\n      const prefixTag = document.createElement('span');\n      prefixTag.innerText = \"첨부파일 - \";\n\n      const bTag = document.createElement('b');\n      //위에 첨부파일 글자 옆에  파일 이름이 b 태그를 사용해서 나온다.\n      bTag.innerText = value.title;\n\n      const linkTag = document.createElement('a');\n      linkTag.setAttribute('href', value.src);\n      linkTag.setAttribute(\"target\", \"_blank\");\n      linkTag.setAttribute(\"className\", \"file-link-inner-post\");\n      linkTag.appendChild(bTag);\n      //linkTag 이런식으로 나온다 <a href=\"btn_editPic@3x.png\" target=\"_blank\" classname=\"file-link-inner-post\"><b>btn_editPic@3x.png</b></a>\n\n      const node = super.create();\n      node.appendChild(prefixTag);\n      node.appendChild(linkTag);\n\n      return node;\n\n    }\n\n    static value(node) {\n      return { src: node.querySelector('a').getAttribute('href'), title: node.querySelector('b').innerText };\n    }\n\n  }\n\n  FileBlot.blotName = 'file';\n  FileBlot.tagName = 'p';\n  FileBlot.className = 'file-inner-post';\n  Quill.register(FileBlot);\n\n  class PollBlot extends BlockEmbed {\n\n    static create(value) {\n      const prefixTag = document.createElement('span');\n      prefixTag.innerText = \"투표 - \";\n\n      const bTag = document.createElement('b');\n      bTag.innerText = value.title;\n\n      const node = super.create();\n      node.setAttribute('id', value.id);\n      node.appendChild(prefixTag);\n      node.appendChild(bTag);\n\n      return node;\n    }\n\n    static value(node) {\n      const id = node.getAttribute('id');\n      const bTag = node.querySelector('b');\n      const title = bTag.innerText;\n      return { id, title };\n    }\n\n  }\n\n  PollBlot.blotName = 'poll';\n  PollBlot.tagName = 'p';\n  PollBlot.className = 'poll-inner-post';\n  Quill.register(PollBlot);\n}\n\nclass QuillEditor extends React.Component {\n\n  bandId;\n  placeholder;\n  onEditorChange;\n  onFilesChange;\n  onPollsChange;\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      editorHtml: \"<p>&nbsp;</p>\",\n    };\n\n    this.reactQuillRef = null;\n\n    this.inputOpenImageRef = React.createRef();\n    this.inputOpenVideoRef = React.createRef();\n    this.inputOpenFileRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    if (this.props.blog.uploadBlogDatasetError) {\n      Message.error('파일을 업로드 하는 과정에서 문제가 발생했습니다.')\n    }\n\n    if (this.props.blog.uploadBlogDatasetDone) {\n      const quill = this.reactQuillRef.getEditor();\n      quill.focus();\n\n      let range = quill.getSelection();\n      let position = range ? range.index : 0;\n      quill.insertEmbed(position, this.props.blog.uploadDataset.dataType, {\n        src: this.props.blog.uploadDataset.url,\n        title: this.props.blog.uploadDataset.fileName\n      });\n      quill.setSelection(position + 1);\n\n      this.props.dispatchResetDataset();\n    }\n  }\n\n  handleChange = (html) => {\n    // console.log('html', html)\n    // https://youtu.be/BbR-QCoKngE\n    // https://www.youtube.com/embed/ZwKhufmMxko\n    // https://tv.naver.com/v/9176888\n    // renderToStaticMarkup(ReactHtmlParser(html, options));\n\n    this.setState({\n      editorHtml: html\n    }, () => {\n      this.props.onEditorChange(this.state.editorHtml);\n    });\n  };\n\n  // I V F P들을  눌렀을떄 insertImage: this.imageHandler로 가서  거기서 inputOpenImageRef를 클릭 시킨다. \n  imageHandler = () => {\n    this.inputOpenImageRef.current.click();\n  };\n\n  videoHandler = () => {\n    this.inputOpenVideoRef.current.click();\n  };\n\n  fileHandler = () => {\n    this.inputOpenFileRef.current.click();\n  };\n\n\n  insertImage = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.currentTarget && e.currentTarget.files?.length > 0) {\n      const file = e.currentTarget.files[0];\n      let formData = new FormData();\n      formData.append(\"file\", file);\n\n      const config = {\n        header: { 'Content-Type': 'multipart/form-data' },\n      }\n\n      this.props.dispatchDataset({ formData, config, dataType: 'image', file })\n    }\n  };\n\n  insertVideo = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.currentTarget && e.currentTarget.files?.length > 0) {\n      const file = e.currentTarget.files[0];\n\n      let formData = new FormData();\n      formData.append(\"file\", file);\n\n      const config = {\n        header: { 'Content-Type': 'multipart/form-data' }\n      }\n\n      this.props.dispatchDataset({ formData, config, dataType: 'video', file })\n    }\n  }\n\n  insertFile = (e) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    if (e.currentTarget && e.currentTarget.files?.length > 0) {\n      const file = e.currentTarget.files[0];\n\n      let formData = new FormData();\n      formData.append(\"file\", file);\n\n      const config = {\n        header: { 'Content-Type': 'multipart/form-data' }\n      }\n\n      this.props.dispatchDataset({ formData, config, dataType: 'file', file })\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div id=\"toolbar\">\n          <select className=\"ql-header\" defaultValue={\"\"} onChange={e => e.persist()}>\n            <option value=\"1\" />\n            <option value=\"2\" />\n            <option value=\"\" />\n          </select>\n          <button className=\"ql-bold\" />\n          <button className=\"ql-italic\" />\n          <button className=\"ql-underline\" />\n          <button className=\"ql-strike\" />\n          <button className=\"ql-insertImage\">\n            <FileImageOutlined />\n          </button>\n          <button className=\"ql-insertVideo\">\n            <VideoCameraAddOutlined />\n          </button>\n          <button className=\"ql-insertFile\">\n            <FileAddOutlined />\n          </button>\n          <button className=\"ql-link\" />\n          <button className=\"ql-code-block\" />\n          <button className=\"ql-video\" />\n          <button className=\"ql-blockquote\" />\n          <button className=\"ql-clean\" />\n        </div>\n        <ReactQuill\n          ref={(el) => { this.reactQuillRef = el }}\n          theme={'snow'}\n          onChange={this.handleChange}\n          modules={this.modules}\n          formats={this.formats}\n          value={this.state.editorHtml}\n          placeholder={this.props.placeholder}\n          style={{ height: 'calc(100vh - 358px)', overflowY: 'hidden' }}\n        />\n        <input type=\"file\" accept=\"image/*\" ref={this.inputOpenImageRef} hidden onChange={this.insertImage} />\n        <input type=\"file\" accept=\"video/*\" ref={this.inputOpenVideoRef} hidden onChange={this.insertVideo} />\n        <input type=\"file\" accept=\"*\" ref={this.inputOpenFileRef} hidden onChange={this.insertFile} />\n      </div>\n    )\n  }\n\n  modules = {\n    // syntax: true,\n    toolbar: {\n      container: \"#toolbar\",\n      //id =\"toorbar\"는  그 위에 B I U S I V F P 이거 있는 곳이다. \n      handlers: {\n        insertImage: this.imageHandler,\n        insertVideo: this.videoHandler,\n        insertFile: this.fileHandler,\n        insertPoll: this.pollHandler,\n      }\n    },\n\n  };\n\n  formats = [\n    'header',\n    'bold', 'italic', 'underline', 'strike',\n    'image', 'video', 'file', 'link', \"code-block\", \"video\", \"blockquote\", \"clean\"\n  ];\n}\n\nconst mapStateToProps = (state) => ({\n  blog: state.blog,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  dispatchDataset: (payload) => dispatch({\n    type: UPLOAD_BLOG_DATASET_REQUEST,\n    payload\n  }),\n  dispatchResetDataset: () => dispatch({\n    type: RESET_UPLOAD_BLOG_DATASET,\n  })\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QuillEditor);"]},"metadata":{},"sourceType":"module"}