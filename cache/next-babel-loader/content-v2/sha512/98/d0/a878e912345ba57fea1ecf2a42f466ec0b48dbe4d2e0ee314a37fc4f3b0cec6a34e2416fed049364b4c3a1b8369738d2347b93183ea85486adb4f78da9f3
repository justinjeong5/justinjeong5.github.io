{"ast":null,"code":"import produce from 'immer';\nimport { CREATE_BLOG_POST_REQUEST, CREATE_BLOG_POST_SUCCESS, CREATE_BLOG_POST_FAILURE, RESET_CREATE_BLOG_POST, LOAD_BLOG_POSTS_REQUEST, LOAD_BLOG_POSTS_SUCCESS, LOAD_BLOG_POSTS_FAILURE, RESET_LOAD_BLOG_POSTS, LOAD_BLOG_POST_REQUEST, LOAD_BLOG_POST_SUCCESS, LOAD_BLOG_POST_FAILURE, UPLOAD_BLOG_DATASET_REQUEST, UPLOAD_BLOG_DATASET_SUCCESS, UPLOAD_BLOG_DATASET_FAILURE, RESET_UPLOAD_BLOG_DATASET } from './types';\nconst initialState = {\n  currentBlogPost: {\n    writer: {}\n  },\n  blogPosts: [],\n  uploadDataset: {\n    files: []\n  },\n  noMorePosts: false,\n  skip: 0,\n  limit: 6,\n  createBlogPostLoading: false,\n  createBlogPostDone: false,\n  createBlogPostError: null,\n  loadBlogPostsLoading: false,\n  loadBlogPostsDone: false,\n  loadBlogPostsError: null,\n  loadBlogPostLoading: false,\n  loadBlogPostDone: false,\n  loadBlogPostError: null,\n  uploadBlogDatasetLoading: false,\n  uploadBlogDatasetDone: false,\n  uploadBlogDatasetError: null\n};\n\nconst blog = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case CREATE_BLOG_POST_REQUEST:\n        draft.createBlogPostLoading = true;\n        draft.createBlogPostDone = false;\n        draft.createBlogPostError = null;\n        break;\n\n      case CREATE_BLOG_POST_SUCCESS:\n        draft.createBlogPostLoading = false;\n        draft.createBlogPostDone = true;\n        draft.blogPosts.push(action.payload.blog);\n        break;\n\n      case CREATE_BLOG_POST_FAILURE:\n        draft.createBlogPostLoading = false;\n        draft.createBlogPostError = action.error.code;\n        break;\n\n      case RESET_CREATE_BLOG_POST:\n        draft.createBlogPostLoading = false;\n        draft.createBlogPostDone = false;\n        draft.createBlogPostError = null;\n        break;\n\n      case LOAD_BLOG_POSTS_REQUEST:\n        draft.loadBlogPostsLoading = true;\n        draft.loadBlogPostsDone = false;\n        draft.loadBlogPostsError = null;\n        break;\n\n      case LOAD_BLOG_POSTS_SUCCESS:\n        draft.loadBlogPostsLoading = false;\n        draft.loadBlogPostsDone = true;\n        draft.blogPosts.push(...action.payload.blogs);\n        draft.noMorePosts = action.noMorePosts;\n        draft.skip += draft.limit;\n        break;\n\n      case LOAD_BLOG_POSTS_FAILURE:\n        draft.loadBlogPostsLoading = false;\n        draft.loadBlogPostsError = action.error.code;\n        break;\n\n      case RESET_LOAD_BLOG_POSTS:\n        draft.loadBlogPostsLoading = false;\n        draft.loadBlogPostsDone = false;\n        draft.loadBlogPostsError = null;\n        draft.blogPosts = [];\n        draft.noMorePosts = false;\n        draft.skip = 0;\n        draft.limit = 6;\n        break;\n\n      case LOAD_BLOG_POST_REQUEST:\n        draft.loadBlogPostLoading = true;\n        draft.loadBlogPostDone = false;\n        draft.loadBlogPostError = null;\n        break;\n\n      case LOAD_BLOG_POST_SUCCESS:\n        draft.loadBlogPostLoading = false;\n        draft.loadBlogPostDone = true;\n        draft.currentBlogPost = action.payload.blog;\n        break;\n\n      case LOAD_BLOG_POST_FAILURE:\n        draft.loadBlogPostLoading = false;\n        draft.loadBlogPostError = action.error.error;\n        break;\n\n      case UPLOAD_BLOG_DATASET_REQUEST:\n        draft.uploadBlogDatasetLoading = true;\n        draft.uploadBlogDatasetDone = false;\n        draft.uploadBlogDatasetError = null;\n        break;\n\n      case UPLOAD_BLOG_DATASET_SUCCESS:\n        draft.uploadBlogDatasetLoading = false;\n        draft.uploadBlogDatasetDone = true;\n        draft.uploadDataset.url = action.payload.url;\n        draft.uploadDataset.fileName = action.payload.fileName;\n        draft.uploadDataset.dataType = action.payload.dataType;\n        draft.uploadDataset.files.push(action.payload.file);\n        break;\n\n      case UPLOAD_BLOG_DATASET_FAILURE:\n        draft.uploadBlogDatasetLoading = false;\n        draft.uploadBlogDatasetError = action.error.code;\n        break;\n\n      case RESET_UPLOAD_BLOG_DATASET:\n        draft.uploadBlogDatasetLoading = false;\n        draft.uploadBlogDatasetDone = false;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default blog;","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/reducers/blog.js"],"names":["produce","CREATE_BLOG_POST_REQUEST","CREATE_BLOG_POST_SUCCESS","CREATE_BLOG_POST_FAILURE","RESET_CREATE_BLOG_POST","LOAD_BLOG_POSTS_REQUEST","LOAD_BLOG_POSTS_SUCCESS","LOAD_BLOG_POSTS_FAILURE","RESET_LOAD_BLOG_POSTS","LOAD_BLOG_POST_REQUEST","LOAD_BLOG_POST_SUCCESS","LOAD_BLOG_POST_FAILURE","UPLOAD_BLOG_DATASET_REQUEST","UPLOAD_BLOG_DATASET_SUCCESS","UPLOAD_BLOG_DATASET_FAILURE","RESET_UPLOAD_BLOG_DATASET","initialState","currentBlogPost","writer","blogPosts","uploadDataset","files","noMorePosts","skip","limit","createBlogPostLoading","createBlogPostDone","createBlogPostError","loadBlogPostsLoading","loadBlogPostsDone","loadBlogPostsError","loadBlogPostLoading","loadBlogPostDone","loadBlogPostError","uploadBlogDatasetLoading","uploadBlogDatasetDone","uploadBlogDatasetError","blog","state","action","draft","type","push","payload","error","code","blogs","url","fileName","dataType","file"],"mappings":"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","sourcesContent":["import produce from 'immer'\n\nimport {\n  CREATE_BLOG_POST_REQUEST, CREATE_BLOG_POST_SUCCESS, CREATE_BLOG_POST_FAILURE,\n  RESET_CREATE_BLOG_POST,\n  LOAD_BLOG_POSTS_REQUEST, LOAD_BLOG_POSTS_SUCCESS, LOAD_BLOG_POSTS_FAILURE,\n  RESET_LOAD_BLOG_POSTS,\n  LOAD_BLOG_POST_REQUEST, LOAD_BLOG_POST_SUCCESS, LOAD_BLOG_POST_FAILURE,\n  UPLOAD_BLOG_DATASET_REQUEST, UPLOAD_BLOG_DATASET_SUCCESS, UPLOAD_BLOG_DATASET_FAILURE,\n  RESET_UPLOAD_BLOG_DATASET,\n} from './types'\n\nconst initialState = {\n  currentBlogPost: {\n    writer: {}\n  },\n  blogPosts: [],\n  uploadDataset: {\n    files: [],\n  },\n  noMorePosts: false,\n  skip: 0,\n  limit: 6,\n\n  createBlogPostLoading: false,\n  createBlogPostDone: false,\n  createBlogPostError: null,\n  loadBlogPostsLoading: false,\n  loadBlogPostsDone: false,\n  loadBlogPostsError: null,\n  loadBlogPostLoading: false,\n  loadBlogPostDone: false,\n  loadBlogPostError: null,\n  uploadBlogDatasetLoading: false,\n  uploadBlogDatasetDone: false,\n  uploadBlogDatasetError: null,\n}\n\nconst blog = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case CREATE_BLOG_POST_REQUEST:\n        draft.createBlogPostLoading = true;\n        draft.createBlogPostDone = false;\n        draft.createBlogPostError = null;\n        break;\n      case CREATE_BLOG_POST_SUCCESS:\n        draft.createBlogPostLoading = false;\n        draft.createBlogPostDone = true;\n        draft.blogPosts.push(action.payload.blog);\n        break;\n      case CREATE_BLOG_POST_FAILURE:\n        draft.createBlogPostLoading = false;\n        draft.createBlogPostError = action.error.code;\n        break;\n      case RESET_CREATE_BLOG_POST:\n        draft.createBlogPostLoading = false;\n        draft.createBlogPostDone = false;\n        draft.createBlogPostError = null;\n        break;\n      case LOAD_BLOG_POSTS_REQUEST:\n        draft.loadBlogPostsLoading = true;\n        draft.loadBlogPostsDone = false;\n        draft.loadBlogPostsError = null;\n        break;\n      case LOAD_BLOG_POSTS_SUCCESS:\n        draft.loadBlogPostsLoading = false;\n        draft.loadBlogPostsDone = true;\n        draft.blogPosts.push(...action.payload.blogs);\n        draft.noMorePosts = action.noMorePosts;\n        draft.skip += draft.limit;\n        break;\n      case LOAD_BLOG_POSTS_FAILURE:\n        draft.loadBlogPostsLoading = false;\n        draft.loadBlogPostsError = action.error.code;\n        break;\n      case RESET_LOAD_BLOG_POSTS:\n        draft.loadBlogPostsLoading = false;\n        draft.loadBlogPostsDone = false;\n        draft.loadBlogPostsError = null;\n        draft.blogPosts = [];\n        draft.noMorePosts = false;\n        draft.skip = 0;\n        draft.limit = 6;\n        break;\n      case LOAD_BLOG_POST_REQUEST:\n        draft.loadBlogPostLoading = true;\n        draft.loadBlogPostDone = false;\n        draft.loadBlogPostError = null;\n        break;\n      case LOAD_BLOG_POST_SUCCESS:\n        draft.loadBlogPostLoading = false;\n        draft.loadBlogPostDone = true;\n        draft.currentBlogPost = action.payload.blog;\n        break;\n      case LOAD_BLOG_POST_FAILURE:\n        draft.loadBlogPostLoading = false;\n        draft.loadBlogPostError = action.error.error;\n        break;\n      case UPLOAD_BLOG_DATASET_REQUEST:\n        draft.uploadBlogDatasetLoading = true;\n        draft.uploadBlogDatasetDone = false;\n        draft.uploadBlogDatasetError = null;\n        break;\n      case UPLOAD_BLOG_DATASET_SUCCESS:\n        draft.uploadBlogDatasetLoading = false;\n        draft.uploadBlogDatasetDone = true;\n        draft.uploadDataset.url = action.payload.url;\n        draft.uploadDataset.fileName = action.payload.fileName;\n        draft.uploadDataset.dataType = action.payload.dataType;\n        draft.uploadDataset.files.push(action.payload.file);\n        break;\n      case UPLOAD_BLOG_DATASET_FAILURE:\n        draft.uploadBlogDatasetLoading = false;\n        draft.uploadBlogDatasetError = action.error.code;\n        break;\n      case RESET_UPLOAD_BLOG_DATASET:\n        draft.uploadBlogDatasetLoading = false;\n        draft.uploadBlogDatasetDone = false;\n        break;\n      default:\n        break;\n    }\n  })\n}\n\nexport default blog;"]},"metadata":{},"sourceType":"module"}