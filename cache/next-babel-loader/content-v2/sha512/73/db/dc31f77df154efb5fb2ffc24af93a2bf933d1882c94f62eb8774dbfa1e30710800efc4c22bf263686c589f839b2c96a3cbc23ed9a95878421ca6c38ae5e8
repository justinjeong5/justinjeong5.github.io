{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/justinjeong/Github/javascript/githubIo/client/components/Chatting/MainPanel/MessageForm.js\";\nimport React, { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form, Button, Input } from 'antd';\nimport { sendChat } from '../../utils/socket';\n\nfunction MessageForm() {\n  const [form] = Form.useForm();\n  const {\n    currentUser\n  } = useSelector(state => state.user);\n  const {\n    currentChatRoom\n  } = useSelector(state => state.chat);\n  const handleFinish = useCallback(() => {\n    var _value$content;\n\n    const value = form.getFieldValue();\n    if (!((_value$content = value.content) !== null && _value$content !== void 0 && _value$content.trim())) return;\n    const payload = {\n      content: value.content.trim(),\n      writer: currentUser.userId\n    };\n\n    if (currentChatRoom.private) {\n      payload.directRoom = currentChatRoom._id;\n    } else {\n      payload.chatRoom = currentChatRoom._id;\n    }\n\n    sendChat(payload);\n    form.resetFields();\n  }, [currentUser, currentChatRoom, form]);\n  const handleKeyDown = useCallback(event => {\n    if (event.shiftKey && event.key === 'Enter' || event.ctrlKey && event.key === 'Enter') {\n      handleFinish();\n    }\n  }, []);\n  const buttonStyle = useMemo(() => ({\n    marginRight: 10\n  }), []);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    layout: \"vertical\",\n    onFinish: handleFinish,\n    onKeyDown: handleKeyDown,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"content\",\n      children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n        disabled: !currentUser.isAuth,\n        placeholder: currentUser.isAuth ? '메세지를 입력하세요.' : '로그인해주세요.',\n        showCount: true,\n        maxLength: 100\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: !currentUser.isAuth,\n        type: \"primary\",\n        htmlType: \"submit\",\n        style: buttonStyle,\n        children: \"\\uBCF4\\uB0B4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MessageForm;","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/components/Chatting/MainPanel/MessageForm.js"],"names":["React","useCallback","useMemo","useSelector","Form","Button","Input","sendChat","MessageForm","form","useForm","currentUser","state","user","currentChatRoom","chat","handleFinish","value","getFieldValue","content","trim","payload","writer","userId","private","directRoom","_id","chatRoom","resetFields","handleKeyDown","event","shiftKey","key","ctrlKey","buttonStyle","marginRight","isAuth"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,QAA4C,OAA5C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,MAApC;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,WAAT,GAAuB;AAErB,QAAM,CAACC,IAAD,IAASL,IAAI,CAACM,OAAL,EAAf;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAkBR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAAnC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAsBX,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACG,IAAhB,CAAvC;AAEA,QAAMC,YAAY,GAAGf,WAAW,CAAC,MAAM;AAAA;;AACrC,UAAMgB,KAAK,GAAGR,IAAI,CAACS,aAAL,EAAd;AACA,QAAI,oBAACD,KAAK,CAACE,OAAP,2CAAC,eAAeC,IAAf,EAAD,CAAJ,EAA4B;AAC5B,UAAMC,OAAO,GAAG;AACdF,MAAAA,OAAO,EAAEF,KAAK,CAACE,OAAN,CAAcC,IAAd,EADK;AAEdE,MAAAA,MAAM,EAAEX,WAAW,CAACY;AAFN,KAAhB;;AAKA,QAAIT,eAAe,CAACU,OAApB,EAA6B;AAC3BH,MAAAA,OAAO,CAACI,UAAR,GAAqBX,eAAe,CAACY,GAArC;AACD,KAFD,MAEO;AACLL,MAAAA,OAAO,CAACM,QAAR,GAAmBb,eAAe,CAACY,GAAnC;AACD;;AACDnB,IAAAA,QAAQ,CAACc,OAAD,CAAR;AACAZ,IAAAA,IAAI,CAACmB,WAAL;AACD,GAf+B,EAe7B,CAACjB,WAAD,EAAcG,eAAd,EAA+BL,IAA/B,CAf6B,CAAhC;AAiBA,QAAMoB,aAAa,GAAG5B,WAAW,CAAE6B,KAAD,IAAW;AAC3C,QAAKA,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACE,GAAN,KAAc,OAAjC,IAA8CF,KAAK,CAACG,OAAN,IAAiBH,KAAK,CAACE,GAAN,KAAc,OAAjF,EAA2F;AACzFhB,MAAAA,YAAY;AACb;AACF,GAJgC,EAI9B,EAJ8B,CAAjC;AAMA,QAAMkB,WAAW,GAAGhC,OAAO,CAAC,OAAO;AAAEiC,IAAAA,WAAW,EAAE;AAAf,GAAP,CAAD,EAA8B,EAA9B,CAA3B;AAEA,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,EAAE1B,IADR;AAEE,IAAA,MAAM,EAAC,UAFT;AAGE,IAAA,QAAQ,EAAEO,YAHZ;AAIE,IAAA,SAAS,EAAEa,aAJb;AAAA,4BAME,QAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,SAAhB;AAAA,6BACE,QAAC,KAAD,CAAO,QAAP;AAAgB,QAAA,QAAQ,EAAE,CAAClB,WAAW,CAACyB,MAAvC;AAA+C,QAAA,WAAW,EAAEzB,WAAW,CAACyB,MAAZ,GAAqB,aAArB,GAAqC,UAAjG;AAA6G,QAAA,SAAS,MAAtH;AAAuH,QAAA,SAAS,EAAE;AAAlI;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eASE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,CAACzB,WAAW,CAACyB,MAA/B;AAAuC,QAAA,IAAI,EAAC,SAA5C;AAAsD,QAAA,QAAQ,EAAC,QAA/D;AAAwE,QAAA,KAAK,EAAEF,WAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;AAED,eAAe1B,WAAf","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Form, Button, Input } from 'antd'\nimport { sendChat } from '../../utils/socket'\n\nfunction MessageForm() {\n\n  const [form] = Form.useForm();\n  const { currentUser } = useSelector(state => state.user)\n  const { currentChatRoom } = useSelector(state => state.chat)\n\n  const handleFinish = useCallback(() => {\n    const value = form.getFieldValue();\n    if (!value.content?.trim()) return;\n    const payload = {\n      content: value.content.trim(),\n      writer: currentUser.userId,\n    };\n\n    if (currentChatRoom.private) {\n      payload.directRoom = currentChatRoom._id;\n    } else {\n      payload.chatRoom = currentChatRoom._id;\n    }\n    sendChat(payload)\n    form.resetFields();\n  }, [currentUser, currentChatRoom, form])\n\n  const handleKeyDown = useCallback((event) => {\n    if ((event.shiftKey && event.key === 'Enter') || (event.ctrlKey && event.key === 'Enter')) {\n      handleFinish();\n    }\n  }, [])\n\n  const buttonStyle = useMemo(() => ({ marginRight: 10 }), [])\n\n  return (\n    <Form\n      form={form}\n      layout=\"vertical\"\n      onFinish={handleFinish}\n      onKeyDown={handleKeyDown}\n    >\n      <Form.Item name='content' >\n        <Input.TextArea disabled={!currentUser.isAuth} placeholder={currentUser.isAuth ? '메세지를 입력하세요.' : '로그인해주세요.'} showCount maxLength={100} />\n      </Form.Item>\n      <Form.Item>\n        <Button disabled={!currentUser.isAuth} type=\"primary\" htmlType=\"submit\" style={buttonStyle}>\n          보내기\n          </Button>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default MessageForm\n"]},"metadata":{},"sourceType":"module"}