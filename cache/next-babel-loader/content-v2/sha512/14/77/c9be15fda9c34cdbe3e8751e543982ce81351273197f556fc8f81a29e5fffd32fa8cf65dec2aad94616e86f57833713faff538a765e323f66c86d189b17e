{"ast":null,"code":"import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({\n  dispatch,\n  getState\n}) => next => action => {\n  console.log(action);\n  return next(action);\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = false ? compose(applyMiddleware(sagaMiddleware)) : composeWithDevTools(applyMiddleware(sagaMiddleware, loggerMiddleware));\nconst store = createStore(rootReducer, enhancer);\nstore.sagaTask = sagaMiddleware.run(rootSaga);\nexport default store;","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/store/storeConfiguration.js"],"names":["applyMiddleware","compose","createStore","createSagaMiddleware","composeWithDevTools","rootReducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","sagaMiddleware","enhancer","store","sagaTask","run"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,WAAP,MAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA6BC,IAAD,IAAWC,MAAD,IAAY;AACzEC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOD,IAAI,CAACC,MAAD,CAAX;AACD,CAHD;;AAKA,MAAMG,cAAc,GAAGX,oBAAoB,EAA3C;AACA,MAAMY,QAAQ,GAAG,QACbd,OAAO,CAACD,eAAe,CAACc,cAAD,CAAhB,CADM,GAEbV,mBAAmB,CAACJ,eAAe,CAACc,cAAD,EAAiBP,gBAAjB,CAAhB,CAFvB;AAGA,MAAMS,KAAK,GAAGd,WAAW,CAACG,WAAD,EAAcU,QAAd,CAAzB;AACAC,KAAK,CAACC,QAAN,GAAiBH,cAAc,CAACI,GAAf,CAAmBZ,QAAnB,CAAjB;AAEA,eAAeU,KAAf","sourcesContent":["import { applyMiddleware, compose, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n  console.log(action);\n  return next(action);\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst enhancer = process.env.NODE_ENV === 'production'\n  ? compose(applyMiddleware(sagaMiddleware))\n  : composeWithDevTools(applyMiddleware(sagaMiddleware, loggerMiddleware))\nconst store = createStore(rootReducer, enhancer);\nstore.sagaTask = sagaMiddleware.run(rootSaga);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}