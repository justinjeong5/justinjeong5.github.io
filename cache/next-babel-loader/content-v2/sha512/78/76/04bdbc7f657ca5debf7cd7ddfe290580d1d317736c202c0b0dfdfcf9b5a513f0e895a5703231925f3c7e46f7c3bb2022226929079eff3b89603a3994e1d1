{"ast":null,"code":"import produce from 'immer';\nimport { POST_COMMENT_REQUEST, POST_COMMENT_SUCCESS, POST_COMMENT_FAILURE, LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_COMMENTS_FAILURE } from './types';\nvar initialState = {\n  commentList: [],\n  message: '',\n  postCommentLoading: false,\n  postCommentDone: false,\n  postCommentError: null,\n  loadCommentsLoading: false,\n  loadCommentsDone: false,\n  loadCommentsError: null\n};\n\nvar comment = function comment() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case POST_COMMENT_REQUEST:\n        draft.postCommentLoading = true;\n        draft.postCommentDone = false;\n        draft.postCommentError = null;\n        break;\n\n      case POST_COMMENT_SUCCESS:\n        draft.postCommentLoading = false;\n        draft.postCommentDone = true;\n        draft.message = action.payload.message;\n        draft.commentList.push(action.payload.comment);\n        break;\n\n      case POST_COMMENT_FAILURE:\n        draft.postCommentLoading = false;\n        draft.postCommentError = action.error.code;\n        draft.message = action.error.message;\n        break;\n\n      case LOAD_COMMENTS_REQUEST:\n        draft.loadCommentsLoading = true;\n        draft.loadCommentsDone = false;\n        draft.loadCommentsError = null;\n        break;\n\n      case LOAD_COMMENTS_SUCCESS:\n        draft.loadCommentsLoading = false;\n        draft.loadCommentsDone = true;\n        draft.message = action.payload.message;\n        draft.commentList = action.payload.comments;\n        break;\n\n      case LOAD_COMMENTS_FAILURE:\n        draft.loadCommentsLoading = false;\n        draft.loadCommentsError = action.error.code;\n        draft.message = action.error.message;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default comment;","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/reducers/comment.js"],"names":["produce","POST_COMMENT_REQUEST","POST_COMMENT_SUCCESS","POST_COMMENT_FAILURE","LOAD_COMMENTS_REQUEST","LOAD_COMMENTS_SUCCESS","LOAD_COMMENTS_FAILURE","initialState","commentList","message","postCommentLoading","postCommentDone","postCommentError","loadCommentsLoading","loadCommentsDone","loadCommentsError","comment","state","action","draft","type","payload","push","error","code","comments"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,SACEC,oBADF,EACwBC,oBADxB,EAC8CC,oBAD9C,EAEEC,qBAFF,EAEyBC,qBAFzB,EAEgDC,qBAFhD,QAGO,SAHP;AAKA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAInBC,EAAAA,kBAAkB,EAAE,KAJD;AAKnBC,EAAAA,eAAe,EAAE,KALE;AAMnBC,EAAAA,gBAAgB,EAAE,IANC;AAOnBC,EAAAA,mBAAmB,EAAE,KAPF;AAQnBC,EAAAA,gBAAgB,EAAE,KARC;AASnBC,EAAAA,iBAAiB,EAAE;AATA,CAArB;;AAYA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBV,YAAyB;AAAA,MAAXW,MAAW;AAChD,SAAOlB,OAAO,CAACiB,KAAD,EAAQ,UAACE,KAAD,EAAW;AAC/B,YAAQD,MAAM,CAACE,IAAf;AACE,WAAKnB,oBAAL;AACEkB,QAAAA,KAAK,CAACT,kBAAN,GAA2B,IAA3B;AACAS,QAAAA,KAAK,CAACR,eAAN,GAAwB,KAAxB;AACAQ,QAAAA,KAAK,CAACP,gBAAN,GAAyB,IAAzB;AACA;;AACF,WAAKV,oBAAL;AACEiB,QAAAA,KAAK,CAACT,kBAAN,GAA2B,KAA3B;AACAS,QAAAA,KAAK,CAACR,eAAN,GAAwB,IAAxB;AACAQ,QAAAA,KAAK,CAACV,OAAN,GAAgBS,MAAM,CAACG,OAAP,CAAeZ,OAA/B;AACAU,QAAAA,KAAK,CAACX,WAAN,CAAkBc,IAAlB,CAAuBJ,MAAM,CAACG,OAAP,CAAeL,OAAtC;AACA;;AACF,WAAKb,oBAAL;AACEgB,QAAAA,KAAK,CAACT,kBAAN,GAA2B,KAA3B;AACAS,QAAAA,KAAK,CAACP,gBAAN,GAAyBM,MAAM,CAACK,KAAP,CAAaC,IAAtC;AACAL,QAAAA,KAAK,CAACV,OAAN,GAAgBS,MAAM,CAACK,KAAP,CAAad,OAA7B;AACA;;AACF,WAAKL,qBAAL;AACEe,QAAAA,KAAK,CAACN,mBAAN,GAA4B,IAA5B;AACAM,QAAAA,KAAK,CAACL,gBAAN,GAAyB,KAAzB;AACAK,QAAAA,KAAK,CAACJ,iBAAN,GAA0B,IAA1B;AACA;;AACF,WAAKV,qBAAL;AACEc,QAAAA,KAAK,CAACN,mBAAN,GAA4B,KAA5B;AACAM,QAAAA,KAAK,CAACL,gBAAN,GAAyB,IAAzB;AACAK,QAAAA,KAAK,CAACV,OAAN,GAAgBS,MAAM,CAACG,OAAP,CAAeZ,OAA/B;AACAU,QAAAA,KAAK,CAACX,WAAN,GAAoBU,MAAM,CAACG,OAAP,CAAeI,QAAnC;AACA;;AACF,WAAKnB,qBAAL;AACEa,QAAAA,KAAK,CAACN,mBAAN,GAA4B,KAA5B;AACAM,QAAAA,KAAK,CAACJ,iBAAN,GAA0BG,MAAM,CAACK,KAAP,CAAaC,IAAvC;AACAL,QAAAA,KAAK,CAACV,OAAN,GAAgBS,MAAM,CAACK,KAAP,CAAad,OAA7B;AACA;;AACF;AACE;AAlCJ;AAoCD,GArCa,CAAd;AAsCD,CAvCD;;AAyCA,eAAeO,OAAf","sourcesContent":["import produce from 'immer'\n\nimport {\n  POST_COMMENT_REQUEST, POST_COMMENT_SUCCESS, POST_COMMENT_FAILURE,\n  LOAD_COMMENTS_REQUEST, LOAD_COMMENTS_SUCCESS, LOAD_COMMENTS_FAILURE,\n} from './types'\n\nconst initialState = {\n  commentList: [],\n  message: '',\n\n  postCommentLoading: false,\n  postCommentDone: false,\n  postCommentError: null,\n  loadCommentsLoading: false,\n  loadCommentsDone: false,\n  loadCommentsError: null,\n}\n\nconst comment = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case POST_COMMENT_REQUEST:\n        draft.postCommentLoading = true;\n        draft.postCommentDone = false;\n        draft.postCommentError = null;\n        break;\n      case POST_COMMENT_SUCCESS:\n        draft.postCommentLoading = false;\n        draft.postCommentDone = true;\n        draft.message = action.payload.message;\n        draft.commentList.push(action.payload.comment);\n        break;\n      case POST_COMMENT_FAILURE:\n        draft.postCommentLoading = false;\n        draft.postCommentError = action.error.code;\n        draft.message = action.error.message;\n        break;\n      case LOAD_COMMENTS_REQUEST:\n        draft.loadCommentsLoading = true;\n        draft.loadCommentsDone = false;\n        draft.loadCommentsError = null;\n        break;\n      case LOAD_COMMENTS_SUCCESS:\n        draft.loadCommentsLoading = false;\n        draft.loadCommentsDone = true;\n        draft.message = action.payload.message;\n        draft.commentList = action.payload.comments;\n        break;\n      case LOAD_COMMENTS_FAILURE:\n        draft.loadCommentsLoading = false;\n        draft.loadCommentsError = action.error.code;\n        draft.message = action.error.message;\n        break;\n      default:\n        break;\n    }\n  });\n}\n\nexport default comment;"]},"metadata":{},"sourceType":"module"}