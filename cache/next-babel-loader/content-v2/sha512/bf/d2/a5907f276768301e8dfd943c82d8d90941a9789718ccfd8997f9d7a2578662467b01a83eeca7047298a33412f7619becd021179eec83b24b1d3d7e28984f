{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/justinjeong/Github/javascript/githubIo/client/components/Blog/PostPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { PageHeader, Divider, Card, Avatar } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport Comment from '../utils/Comment/Comment';\nmoment.locale('ko');\n\nfunction PostPage() {\n  _s();\n\n  const router = useRouter();\n  const {\n    currentUser\n  } = useSelector(state => state.user);\n  const {\n    currentBlogPost,\n    loadBlogPostLoading,\n    loadBlogPostDone\n  } = useSelector(state => state.blog);\n  const handleCancel = useCallback(() => {\n    router.back();\n  }, []);\n  const loadingWrapperStyle = useMemo(() => ({\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '100vw',\n    height: 'calc(100vh - 128px)'\n  }), []);\n  const loadingStyle = useMemo(() => ({\n    fontSize: '5rem'\n  }), []);\n  const rootWrapperStyle = useMemo(() => ({\n    width: '80%',\n    maxWidth: '1000px',\n    padding: 24,\n    margin: '3rem auto'\n  }), []);\n  const cardStyle = useMemo(() => ({\n    border: 'none'\n  }), []);\n  const blogContentStyle = useMemo(() => ({\n    margin: '3rem auto',\n    height: '100%'\n  }), []);\n  const renderBlogPost = useMemo(() => ({\n    __html: currentBlogPost.content\n  }), [currentBlogPost]);\n  const commentPayload = useMemo(() => ({\n    blogId: currentBlogPost._id\n  }), [currentBlogPost]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loadBlogPostLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: loadingWrapperStyle,\n      children: /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n        style: loadingStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 31\n    }, this), loadBlogPostDone && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: rootWrapperStyle,\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          ghost: false,\n          onBack: handleCancel,\n          title: currentBlogPost.title,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            style: cardStyle,\n            children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n              avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n                size: \"large\",\n                src: currentBlogPost.writer.image,\n                alt: currentBlogPost.writer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this),\n              title: currentBlogPost.writer.email,\n              description: `${currentBlogPost.writer.name} / ${moment(currentBlogPost.createdAt).format('a h:mm:ss, YYYY년 MMMM Do')}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: blogContentStyle,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            dangerouslySetInnerHTML: renderBlogPost\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Comment, {\n          disabled: !currentUser.isAuth,\n          payload: commentPayload,\n          description: \"\\uB367\\uAE00 \\uB0A8\\uAE30\\uAE30\",\n          placeholder: \"\\uB313\\uAE00\\uC744 \\uB0A8\\uACA8\\uC8FC\\uC138\\uC694. \\uBE14\\uB85C\\uAC70\\uC5D0\\uAC8C\\uB294 \\uD070 \\uD798\\uC774 \\uB429\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n}\n\n_s(PostPage, \"EHW4WpsQER/nS3PJpMbtu12fVas=\", false, function () {\n  return [useRouter, useSelector, useSelector];\n});\n\n_c = PostPage;\nexport default PostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/components/Blog/PostPage.js"],"names":["React","useCallback","useMemo","useSelector","useRouter","PageHeader","Divider","Card","Avatar","LoadingOutlined","moment","Comment","locale","PostPage","router","currentUser","state","user","currentBlogPost","loadBlogPostLoading","loadBlogPostDone","blog","handleCancel","back","loadingWrapperStyle","display","justifyContent","alignItems","width","height","loadingStyle","fontSize","rootWrapperStyle","maxWidth","padding","margin","cardStyle","border","blogContentStyle","renderBlogPost","__html","content","commentPayload","blogId","_id","title","writer","image","name","email","createdAt","format","isAuth"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo } from 'react'\nimport { useSelector } from 'react-redux';\nimport { useRouter } from 'next/router'\nimport { PageHeader, Divider, Card, Avatar } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\nimport moment from 'moment'\nimport Comment from '../utils/Comment/Comment'\nmoment.locale('ko')\n\nfunction PostPage() {\n\n  const router = useRouter();\n\n  const { currentUser } = useSelector(state => state.user);\n  const { currentBlogPost, loadBlogPostLoading, loadBlogPostDone } = useSelector(state => state.blog)\n\n  const handleCancel = useCallback(() => {\n    router.back()\n  }, [])\n\n  const loadingWrapperStyle = useMemo(() => ({ display: 'flex', justifyContent: 'center', alignItems: 'center', width: '100vw', height: 'calc(100vh - 128px)' }), [])\n  const loadingStyle = useMemo(() => ({ fontSize: '5rem' }), [])\n  const rootWrapperStyle = useMemo(() => ({ width: '80%', maxWidth: '1000px', padding: 24, margin: '3rem auto' }), [])\n  const cardStyle = useMemo(() => ({ border: 'none' }), [])\n  const blogContentStyle = useMemo(() => ({ margin: '3rem auto', height: '100%' }), [])\n  const renderBlogPost = useMemo(() => ({ __html: currentBlogPost.content }), [currentBlogPost])\n  const commentPayload = useMemo(() => ({ blogId: currentBlogPost._id }), [currentBlogPost])\n\n  return (\n    <>\n      {loadBlogPostLoading && <div style={loadingWrapperStyle}>\n        <LoadingOutlined style={loadingStyle} />\n      </div>}\n      {loadBlogPostDone && <>\n        <div style={rootWrapperStyle}>\n          <PageHeader\n            ghost={false}\n            onBack={handleCancel}\n            title={currentBlogPost.title}\n          >\n            <Card style={cardStyle}>\n              <Card.Meta\n                avatar={<Avatar size='large' src={currentBlogPost.writer.image} alt={currentBlogPost.writer.name} />}\n                title={currentBlogPost.writer.email}\n                description={`${currentBlogPost.writer.name} / ${moment(currentBlogPost.createdAt).format('a h:mm:ss, YYYY년 MMMM Do')}`}\n              />\n            </Card>\n          </PageHeader>\n\n          <Divider />\n          <div style={blogContentStyle}>\n            <div dangerouslySetInnerHTML={renderBlogPost} />\n          </div>\n          <Comment disabled={!currentUser.isAuth} payload={commentPayload} description='덧글 남기기' placeholder='댓글을 남겨주세요. 블로거에게는 큰 힘이 됩니다.' />\n        </div>\n      </>}\n    </>\n  )\n}\n\nexport default PostPage\n"]},"metadata":{},"sourceType":"module"}