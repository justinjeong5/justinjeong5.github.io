{"ast":null,"code":"import produce from 'immer';\nimport { LOAD_MOVIES_REQUEST, LOAD_MOVIES_SUCCESS, LOAD_MOVIES_FAILURE, LOAD_MOVIE_DETAIL_REQUEST, LOAD_MOVIE_DETAIL_SUCCESS, LOAD_MOVIE_DETAIL_FAILURE, LOAD_MOVIE_TRAILER_REQUEST, LOAD_MOVIE_TRAILER_SUCCESS, LOAD_MOVIE_TRAILER_FAILURE, LOAD_MOVIE_CASTING_REQUEST, LOAD_MOVIE_CASTING_SUCCESS, LOAD_MOVIE_CASTING_FAILURE } from './types';\nconst initialState = {\n  movieData: [],\n  currentMovie: {},\n  pageNumber: 1,\n  loadMoviesLoading: false,\n  loadMoviesDone: false,\n  loadMoviesError: null,\n  loadMovieDetailLoading: false,\n  loadMovieDetailDone: false,\n  loadMovieDetailError: null,\n  loadMovieTrailerLoading: false,\n  loadMovieTrailerDone: false,\n  loadMovieTrailerError: null,\n  loadMovieCastingLoading: false,\n  loadMovieCastingDone: false,\n  loadMovieCastingError: null\n};\n\nconst movie = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_MOVIES_REQUEST:\n        draft.loadMoviesLoading = true;\n        draft.loadMoviesDone = false;\n        draft.loadMoviesError = null;\n        break;\n\n      case LOAD_MOVIES_SUCCESS:\n        draft.loadMoviesLoading = false;\n        draft.loadMoviesDone = true;\n        draft.movieData.push(...action.payload.results);\n        draft.pageNumber += 1;\n        break;\n\n      case LOAD_MOVIES_FAILURE:\n        draft.loadMoviesLoading = false;\n        draft.loadMoviesError = action.error;\n        break;\n\n      case LOAD_MOVIE_DETAIL_REQUEST:\n        draft.loadMovieDetailLoading = true;\n        draft.loadMovieDetailDone = false;\n        draft.loadMovieDetailError = null;\n        break;\n\n      case LOAD_MOVIE_DETAIL_SUCCESS:\n        draft.loadMovieDetailLoading = false;\n        draft.loadMovieDetailDone = true;\n        draft.currentMovie = action.payload;\n        break;\n\n      case LOAD_MOVIE_DETAIL_FAILURE:\n        draft.loadMovieDetailLoading = false;\n        draft.loadMovieDetailError = action.error;\n        break;\n\n      case LOAD_MOVIE_TRAILER_REQUEST:\n        draft.loadMovieTrailerLoading = true;\n        draft.loadMovieTrailerDone = false;\n        draft.loadMovieTrailerError = null;\n        break;\n\n      case LOAD_MOVIE_TRAILER_SUCCESS:\n        draft.loadMovieTrailerLoading = false;\n        draft.loadMovieTrailerDone = true;\n        draft.currentMovie.trailer = action.payload.results[0];\n        break;\n\n      case LOAD_MOVIE_TRAILER_FAILURE:\n        draft.loadMovieTrailerLoading = false;\n        draft.loadMovieTrailerError = action.error;\n        break;\n\n      case LOAD_MOVIE_CASTING_REQUEST:\n        draft.loadMovieCastingLoading = true;\n        draft.loadMovieCastingDone = false;\n        draft.loadMovieCastingError = null;\n        break;\n\n      case LOAD_MOVIE_CASTING_SUCCESS:\n        draft.loadMovieCastingLoading = false;\n        draft.loadMovieCastingDone = true;\n        draft.currentMovie.casting = action.payload.cast;\n        break;\n\n      case LOAD_MOVIE_CASTING_FAILURE:\n        draft.loadMovieCastingLoading = false;\n        draft.loadMovieCastingError = action.error;\n        break;\n\n      default:\n        break;\n    }\n  });\n};\n\nexport default movie;","map":{"version":3,"sources":["/Users/justinjeong/Github/javascript/githubIo/client/reducers/movie.js"],"names":["produce","LOAD_MOVIES_REQUEST","LOAD_MOVIES_SUCCESS","LOAD_MOVIES_FAILURE","LOAD_MOVIE_DETAIL_REQUEST","LOAD_MOVIE_DETAIL_SUCCESS","LOAD_MOVIE_DETAIL_FAILURE","LOAD_MOVIE_TRAILER_REQUEST","LOAD_MOVIE_TRAILER_SUCCESS","LOAD_MOVIE_TRAILER_FAILURE","LOAD_MOVIE_CASTING_REQUEST","LOAD_MOVIE_CASTING_SUCCESS","LOAD_MOVIE_CASTING_FAILURE","initialState","movieData","currentMovie","pageNumber","loadMoviesLoading","loadMoviesDone","loadMoviesError","loadMovieDetailLoading","loadMovieDetailDone","loadMovieDetailError","loadMovieTrailerLoading","loadMovieTrailerDone","loadMovieTrailerError","loadMovieCastingLoading","loadMovieCastingDone","loadMovieCastingError","movie","state","action","draft","type","push","payload","results","error","trailer","casting","cast"],"mappings":"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","sourcesContent":["import produce from 'immer'\n\nimport {\n  LOAD_MOVIES_REQUEST, LOAD_MOVIES_SUCCESS, LOAD_MOVIES_FAILURE,\n  LOAD_MOVIE_DETAIL_REQUEST, LOAD_MOVIE_DETAIL_SUCCESS, LOAD_MOVIE_DETAIL_FAILURE,\n  LOAD_MOVIE_TRAILER_REQUEST, LOAD_MOVIE_TRAILER_SUCCESS, LOAD_MOVIE_TRAILER_FAILURE,\n  LOAD_MOVIE_CASTING_REQUEST, LOAD_MOVIE_CASTING_SUCCESS, LOAD_MOVIE_CASTING_FAILURE,\n} from './types'\n\nconst initialState = {\n  movieData: [],\n  currentMovie: {},\n  pageNumber: 1,\n\n  loadMoviesLoading: false,\n  loadMoviesDone: false,\n  loadMoviesError: null,\n  loadMovieDetailLoading: false,\n  loadMovieDetailDone: false,\n  loadMovieDetailError: null,\n  loadMovieTrailerLoading: false,\n  loadMovieTrailerDone: false,\n  loadMovieTrailerError: null,\n  loadMovieCastingLoading: false,\n  loadMovieCastingDone: false,\n  loadMovieCastingError: null,\n}\n\nconst movie = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case LOAD_MOVIES_REQUEST:\n        draft.loadMoviesLoading = true;\n        draft.loadMoviesDone = false;\n        draft.loadMoviesError = null;\n        break;\n      case LOAD_MOVIES_SUCCESS:\n        draft.loadMoviesLoading = false;\n        draft.loadMoviesDone = true;\n        draft.movieData.push(...action.payload.results);\n        draft.pageNumber += 1;\n        break;\n      case LOAD_MOVIES_FAILURE:\n        draft.loadMoviesLoading = false;\n        draft.loadMoviesError = action.error;\n        break;\n      case LOAD_MOVIE_DETAIL_REQUEST:\n        draft.loadMovieDetailLoading = true;\n        draft.loadMovieDetailDone = false;\n        draft.loadMovieDetailError = null;\n        break;\n      case LOAD_MOVIE_DETAIL_SUCCESS:\n        draft.loadMovieDetailLoading = false;\n        draft.loadMovieDetailDone = true;\n        draft.currentMovie = action.payload;\n        break;\n      case LOAD_MOVIE_DETAIL_FAILURE:\n        draft.loadMovieDetailLoading = false;\n        draft.loadMovieDetailError = action.error;\n        break;\n      case LOAD_MOVIE_TRAILER_REQUEST:\n        draft.loadMovieTrailerLoading = true;\n        draft.loadMovieTrailerDone = false;\n        draft.loadMovieTrailerError = null;\n        break;\n      case LOAD_MOVIE_TRAILER_SUCCESS:\n        draft.loadMovieTrailerLoading = false;\n        draft.loadMovieTrailerDone = true;\n        draft.currentMovie.trailer = action.payload.results[0];\n        break;\n      case LOAD_MOVIE_TRAILER_FAILURE:\n        draft.loadMovieTrailerLoading = false;\n        draft.loadMovieTrailerError = action.error;\n        break;\n      case LOAD_MOVIE_CASTING_REQUEST:\n        draft.loadMovieCastingLoading = true;\n        draft.loadMovieCastingDone = false;\n        draft.loadMovieCastingError = null;\n        break;\n      case LOAD_MOVIE_CASTING_SUCCESS:\n        draft.loadMovieCastingLoading = false;\n        draft.loadMovieCastingDone = true;\n        draft.currentMovie.casting = action.payload.cast;\n        break;\n      case LOAD_MOVIE_CASTING_FAILURE:\n        draft.loadMovieCastingLoading = false;\n        draft.loadMovieCastingError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n}\n\nexport default movie;"]},"metadata":{},"sourceType":"module"}